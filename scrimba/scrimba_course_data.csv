,title,teacher,level,about_course,lessons,You'll learn,You'll build,Prerequisites,about_teacher,Why this course rocks
0,Learn Imba,Nathan Manousos,Course level: Intermediate,Imba is a compile-to-JavaScript programming language that lets you build blazingly fast web apps. It powers both the frontend and backend of the Scrimba.com platform.,"{'Learn Imba': ['1. Intro', '2. Intro to Imba Syntax', '3. Conditionals', '4. Loops', '5. Functions', '6. Anonymous Functions', '7. Imports', '8. Classes', '9. Tags', '10. Defining Custom Tags', '11. Loops Inside Tags', '12. Conditionals inside Tags', '13. Inline Styles', '14. Style Property Shorthands', '15. Scoped Styles', '16. Imba-Defined CSS Properties', '17. Imba-Defined CSS Values', '18. CSS Modifiers', '19. Bonus Imba Styling Features', '20. Binding', '21. Binding Custom Tags', '22. Event Handling', '23. Emitting Custom Events', '24. Local vs Global Components', '25. Organizing The Project', '26. Container Tag', '27. Habit Adder Tag', '28. Event Modifiers', '29. Sending Data with Events', '30. Adding SVG Icons', '31. Making an Animated Drawer', '32. Add the Icon Chooser', '33. Cosmetic Improvements', '34. Move Delete to Dopamine Box', '35. Move Toggle to Dopamine Box', '36. LocalStorage', '37. Manage Empty State', '38. Lifecycle Methods', '39. Celebration Sound Effect', '40. Reset habits and use imba.commit()', '41. Wrap Up']}","['Basic Imba Syntax', 'Integrating Imba with existing code', 'Conditionals', 'Loops', 'Functions', 'Imports', 'Classes', 'Custom tags', 'Inline styles', 'Imba’s powerful styling capabilities', 'Style shorthands', 'Scoped styles', 'Event handling', 'Data binding', 'Emitting custom events', 'Adding icons', 'Managing state', 'Lifecycle methods', 'Imba and LocalStorage', 'How to structure an Imba project']",['Dopamine Box'],"['Before taking this course, you should have a basic understanding of JavaScript. Here’s our suggested resource to get you up to speed.']",I’m a software designer based in California who co-founded and designed Flinto - a widely used Mac app for creating high-fidelity prototypes. ,"['In this course you’ll learn Imba, the programming langauge used to build scrimba.com.', 'Imba is a compile-to-JavaScript language that includes powerful features for building web apps like built-in tags and styles. ', 'You’ll learn the basics of Imba syntax, and build a Dopamina Box app. By the end, you’ll have enough knowledge to build your own web app UI with Imba. ', 'This course is intended for people who already know a bit of Javascript.']"
1,Learn CSS animations,Jad Khalili,Course level: Intermediate,Learn how to make your websites come alive with CSS animations. This course gives you a solid foundation with real-world coding challenges.,"{'Learn CSS animations': ['1. Welcome to the course!', '2. Project Navigation', '3. Frontend Career Path', '4. What are Transitions?', '5. Adding Transitions', '6. Customizing Transitions', '7. Transition Shorthand', '8. Transition Challenge', '9. Real-World Transitions Challenge: Menu', '10. Animations in Action', '11. Defining Animations', '12. Animations: Timing', '13. Animations: Other Properties', '14. Animation Shorthand', '15. Animation Challenge', '16. Real-World Animations Challenge: Landing Page', '17. Introduction to Transforms & Scaling', '18. Translation', '19. Rotation', '20. Skew', '21. Transform Challenge', '22. Real-World Transforms Challenge: Logo', '23. Prefixes', '24. CSS Variables', '25. Custom Timing Functions', '26. Congratulations  on Completing Learn CSS Animations 🤩']}","['Adding transitions', 'Customising transitions', 'Defining animations', 'Timing animations', 'Transforms & Scaling', 'Translation', 'Rotation', 'Skew', 'Prefixes', 'CSS variables', 'Timing functions']",[],"['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed.']","Hi, my name is Jad Khalili, and I have been an online instructor for over 3 years, in which I've taught over 60,000 students from around the world. I especially enjoy teaching HTML, CSS, and design.","[""Do you want to learn how CSS animations work, and know how to apply them to real-world scenarios? Good news, you've found the perfect course! "", ""In just two hours, you will gain a fundamental understanding of the CSS properties that are used to create animations. You'll learn how to make user-friendly animations and how to apply them across browsers. "", 'Along the course, there will be challenges with real-world examples that developers encounter in their daily lives, where you will be able to test and review what you learn. ', 'Join the Scrimba community chat', 'Learning alone can be lonely. Click ', 'here', ' to join our Discord server and connect with other Scrimba learners!']"
2,Learn Alpine JS,Andre Madarang,Course level: Intermediate,Alpine.js offers the reactive and declarative nature of big frameworks like Vue or React at a much lower cost. This interactive course will teach you the basics in less than an hour.,"{'Learn Alpine JS': ['1. Introduction', '2. Installation & A Basic Alpine Component', '3. Frontend Career Path', '4. Dropdown', '5. Modals and x-ref', '6. Sidebar', '7. Tabs', '8. Image Selection', '9. Scroll Detection', '10. Accordion Toggle and loops', '11. fetch and x-init', '12. Todo App and x-model', '13. Transitions: Dropdown', '14. Transitions: Modal', '15. Transitions: Sidebar', '16. Easier Transitions', '17. Conclusion', '18. Congratulations on completing Learn Alpine JS! 🗻']}",[],[],"['Before taking this course, you should have a basic understanding of HTML, CSS, and JavaScript. Here’s our suggested resources to get you up to speed.']","Greetings! I’m Andre. I spend my days designing and developing web applications, and teaching about it. I specialize in the Laravel PHP framework on the backend, Vue.js on the frontend and Tailwind CSS for styling. ","['Are you looking for a quick way to add interactivity to a website without having to introduce a full-blown framework like Vue or React? Look no further! ', 'Alpine.js offers you the reactive and declarative nature of big frameworks at a much lower cost. You get to keep your DOM and sprinkle in behavior as you see fit. Think of it like Tailwind for JavaScript!', 'This course will give you a quick introduction to Alpine.js via interactive coding challenges. The teacher is the eminent Andre Madarang, a full-stack web developer, and popular YouTube instructor.', 'Join the Scrimba community chat', 'Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
3,Build Tic Tac Toe with React Hooks,Thomas Weibenfalk,Course level: Intermediate,This quick course will teach you to build the classic Tic Tac Toe game using modern React and React Hooks.,"{'Build Tic Tac Toe with React Hooks': ['1. Introduction', '2. Scaffolding Components', '3. Frontend Developer Career Path Promo', '4. Frontend Career Path', '5. Square Component & destructuring props', '6. Board Component and scaffolding functions', '7. Square Styling', '8. Board Styling', '9. calculateWinner function explained', '10. Create states and fill with initial data', '11. Create the handleClick function', '12. renderMoves function and the last JSX', '13. BONUS: Implement Time Travel', '14. Congratulations on completing Build Tic Tac Toe with React Hooks \U0001fa9d']}",[],[],"['Before taking this course, you should have a basic understanding of HTML, CSS, JavaScript, and React. Here’s our suggested resources to get you up to speed.']","Thomas is a multitalented digital native from Sweden. He has been developing webpages and web applications ever since Internet first became a phenomenon. 
","[""In this course, we're going to have some fun building a Tic Tac Toe game with modern React. The example is pulled from React's official tutorials, but instead of doing the old way, we'll use React Hooks."", 'Knowing React Hooks is a critical skill for any React developer who aims to work with modern codebases, and this course will teach it to in a fun way and quick way!', ""The course assumes you know basic React beforehand. If you've gone through our "", 'Learn React For Free', "" course, you'll be well equipped to tackle this one.""]"
4,Build a movie search app in React,James Q Quick,Course level: Intermediate,Learn React in one hour by building a movie search app. Solve interactive coding challenges to ensure that the knowledge sticks with you.,"{'Build a movie search app in React': ['1. Course Introduction', '2. How To Get Your Movie DB API Key', '3. Frontend Developer Career Path Promo', '4. Add Base Styles to Our App', '5. Create Your First Component', '6. Style the Search Movies Component', '7. Create the Search Movies Function', '8. Manage State with React useState Hook', '9. Display Movie Information', '10. Style the Movie Cards', '11. Create the Movie Card Component (Challenge)', '12. Wrap Up', '13. Congratulations on completing Build a movie search app in React! ']}",[],[],"[""Before taking this course, you should have a basic understanding of HTML, CSS, and JavaScript. It's also a benefit to have seen a little bit of React code before, but it's not a must-have. Check out the courses below if you don't feel ready for this course yet.""]","Web Developer, Speaker, and Teacher. ","['This course teaches you React by building a movie search app. It offers a quick and interactive primer on the worlds most popular front-end framework. ', ""Throughout the 11 lessons, you'll solve several interactive coding challenges to ensure that the knowledge actually sticks with you. "", 'The course focues on modern React, using concepts like functional components and hooks to build the movie search app.', 'If you feel find this course to be a bit over your level, you should also check out our ', 'Learn React For Free', ' course.\u2028']"
5,Learn Svelte,Noah Kaufman,Course level: Beginner,"This tutorial will teach you Svelte in less than an hour. You'll learn it by building a fun chat bot, and by solving interactive coding challenges along the way.","{'Learn Svelte': ['1. Welcome to the course!', '2. Components ', '3. Frontend Career Path', '4. Importing and exporting', '5. Challenge', '6. Slots', '7. Templating', '8. Making the header', '9. Event handling', '10. Event dispatching ', '11. Buttons', '12. Reactivity', '13. Reactive challenge', '14. A bit more reactivity', '15. Binding ', '16. Final project ', '17. Outro', '18. Congratulations on Completing Learn Svelte ✨']}","['Components', 'Props', 'Loops', 'Conditionals', 'Templating syntax', 'Event dispatching', 'Event handling', 'Two-way binding', 'Reactivity', 'Import/Export', 'Slots']",['The Svelte chat bot'],[],"Hi, I'm Noah! I'm a Senior Frontend Developer from San Francisco, California with an M.S in Computational Linguistics. I'm also known as Svelte Master on YouTube, where I create tutorials on, you guessed it, Svelte.","['Svelte is a Javascript framework, a compiler and a language. Unlike other Frameworks such as React and Vue which do much of their work in the browser, Svelte does its work in the compile step, which results in highly efficient code and a potentially faster run-time on the client-side.', ""\u2028\u2028In this course, Noah Kaufman will teach you Svelte by building a fun chatbot. The course contains several interactive coding challenges, where you'll be encouraged to write your first lines of Svelte code. This will solidify your learning, so we strongly encourage you to do these challenges along the way."", 'The teacher, Noah, is also known as Svelte Master on YouTube, where he creates tutorials on his favourite JavaScript framework. Other than that, he is a Senior Frontend Developer from San Francisco, California with an M.S in Computational Linguistics.']"
6,Learn UI Design,Gary Simon,Course level: Intermediate,"This massive UI design course teaches you to build beautiful and well-functioning user interfaces using HTML and CSS. It's filled with interactive tutorials to ensure that the knowledge sticks with you. Created by Gary Simon, the most popular online instructor on this subject.","{'Course Introduction': [""1. Who I am, What we'll Learn & Prerequisites"", '2. Subjectivity vs. Objectivity', '3. Tools to Use', '4. Using Scrimba & Sharing your Work'], 'UI Design Fundamentals': ['1. Introduction', '2. White Space', '3. Alignment', '4. Frontend Career Path', '5. Design Challenge: 1', '6. Contrast', '7. Scale', '8. Design Challenge: 2', '9. Typography', '10. Color', '11. Design Challenge: 3', '12. Visual Hierarchy', '13. Design Challenge: 4', '14. The Final Challenge', '15. Wrapping Up'], 'Building A Simple Layout': ['1. Building a simple layout - intro', '2. Keeping it Ultra Simple', '3. Making our Layout Dark', '4. Challenge 1', '5. Multi-Columns', '6. Working with Photographs', '7. Final Chapter Lesson'], 'Responsive Design': ['1. Chapter Introduction (04)', '2. Defining the HTML', '3. Mobile First CSS (Part 1)', '4. Mobile First CSS (Part 2)', '5. Mobile First CSS (Part 3)', '6. Responsive Design (Part 1)', '7. Responsive Design Challenge 1', '8. Finishing Up', '9. Final Chapter Challenge'], 'Responsive Navigations': ['1. Introduction to responsive navigations', '2. Writing the HTML (real)', '3. Mobile CSS (Part 1)', '4. Mobile CSS (Part 2)', '5. Responsive CSS (Challenge 1)', '6. Making the Mobile Menu Work', '7. Animating the Mobile Menu', '8. Sub Menu Design Challenge'], 'Full Project Refactoring': ['1. Project Refactoring: Introduction & Defining the HTML', '2. Fixing the Color & Contrast', '3. Fixing the Type & Visual Hierarchy', '4. Fixing White Space', '5. Initial Media Queries', '6. Tablet Media Queries', '7. Desktop Media Query'], 'Tea UI Design Project': ['1. The TeaPlace landing page challenge', '2. Defining the HTML', '3. Challenge 1: Mobile UI Design', '4. Challenge 1: My Solution (Mobile Header & Navigation)', '5. Challenge 1: My Solution (Completing the Mobile Design)', '6. Challenge 2: Tablet Challenge', '7. Challenge 2: My Solution', '8. Challenge 3: Desktop Design', '9. Challenge 3: My Solution'], 'Shadows': ['1. Shadows 101', '2. Drop Shadow Playground Setup', '3. Challenge 1: Hard & Soft Drop Shadows', '4. Challenge 2: Using Shadows to Define Containers', '5. Challenge 3: Colored Shadows', '6. Quick Tip: Multi-Layered Shadows'], 'Gradients': ['1. Introduction', '2. Challenge 1: Basic Gradient', '3. Challenge 2: Button Gradient', '4. Challenge 3 Setup HTML & CSS', '5. Challenge 3: Card Gradients', '6. Challenge 4: Card Gradients (Light Variation)'], 'Forms': ['1. Forms 101', '2. HTML Form Setup', '3. CSS Form Setup (Progress Design)', '4. Challenge 1: Form Design CSS', '5. Challenge 2: Responsive Form Design', '6. Challenge 3: Radio Buttons', '7. Challenge 4: Checkboxes'], 'UI Animation': ['1. Introduction', '2. Defining the HTML', '3. Defining the Initial CSS for Mobile', '4. Challenge 1: Responsive Design', '5. Challenge 2: A Simple Hover'], 'Final Project': ['1. Project Introduction', '2. Defining the HTML', '3. Defining the HTML (Part 2)', '4. Defining the Navigation CSS', '5. Defining the Hero Section CSS (Part 1)', '6. Defining the Hero Section CSS (Part 2)', '7. Defining the Features Section', '8. Finishing the Mobile CSS', '9. Challenge: Small Tablet Responsive Design', '10. Challenge: Desktop Responsive Design', '11. Challenge: Testimonials on Desktop', '12. Defining the Sub Page HTML', '13. Challenge: Style the Sub Page', '14. Challenge: Animating the UI', '15. Bonus: Pattern Libraries, Style Guides & Design Systems 101']}","['UI design fundamentals', 'Build UIs from scratch', 'Refactor UIs', 'Responsiveness', 'Navigations', 'Forms', 'Shadow', 'Gradients', 'UI Animation', 'Colors', 'Contrast', 'White space', 'Typography', 'Alignment', 'Visual hierarchy', 'Scale']","['Forest Vacation page', 'The Ultimate Tea webshop', 'Signup flow form']","[""Before taking this course, you should have a good grasp of HTML and CSS, as Gary will be teaching UI design concepts using these technologies.If you're not there yet, try this course:""]","Gary is one of YouTube's most popular coding teachers, with over 500.000 followers. He has created close to 100 courses, with topics raging from graphic design to advanced frontend development. ","[""While we can all clearly recognize what a great user interface looks like, it's actually really hard to build one!    And that's exactly what this bootcamp is all about. In it, Gary Simon will turn you into a UI design master. He'll teach you UI design from the ground up, and give you the skills you need in order to make sure that your next project both looks good  and feels good to use.\u2028 \u2028It starts from the very basics, so you don't need any UI design experience to join, just basic HTML and CSS skills.\u2028 "", '\u2028 ', 'A world-class teacher', '\u2028', ""Gary is the most popular design and coding teacher on YouTube, with over 500,000 people following his channel DesignCourse. \u2028 \u2028He has over 20 years of experience as a UI/UX designer and a frontend developer, so you can rest assured that you'll be in good hands.  \u2028This course is also a social experience. Gary will constantly encourage you to share the UI designs you create in Scrimba's "", 'Discord channel', "". \u2028 \u2028We've created a dedicated channel for the course, so that you can get feedback from other students, and provide your own feedback as well.   Building great UIs is a skill that any front-end developer will benefit from. Whether you're in a team, working as a consultant, or just want to build your own projects, everyone needs good user interfaces. So what are you waiting for? \u2028 \u2028Join the course today, and start your journey as a UI designer!""]"
7,Learn Tailwind CSS,Victor Gonzalez,Course level: Intermediate,"Tailwind CSS is a utility-first framework for
rapidly building custom designs. This tutorial will teach your Tailwind from scratch, using a mix of lectures and interactive coding challenges.","{'Learn Tailwind CSS': ['1. Welcome to the Tailwind CSS course', '2. Background Classes & Shades', '3. Frontend Career Path', ""4. Element Sizing & Tailwind's Numbering System"", '5. Shades of Blue Challenge', '6. Padding & Margins', '7. Styling Text Part 1', '8. Styling Text Part 2', '9. Text Styling', '10. Borders', '11. The Buttons Challenge', '12. Display Modes', '13. Flexbox', '14. Block Gallery Challenge', '15. Responsive Design', '16. Hover Modifier', '17. Focus Modifier', '18. Combination Modifier', '19. Other Utilities', '20. Input Component Challenge', '21. Employee Card Challenge', '22. Final Course Project - Landing Page', ""23. It's A Wrap!"", '24. Congratulations on Completing Learn Tailwind CSS for Free 😃']}",[],"['Course landing page', 'Employee card']","['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed.']",Victor is a Senior Web Developer with over 10 years of professional experience building web applications. He has taught software development to hundreds of thousands of people via his popular YouTube channel Coders Tape.,"['During this course we will be exploring the features of Tailwind CSS. As a quick recap, Tailwind is a utility-first framework designed to speed up the design process by completely removing the need for custom CSS. In the past, every HTML element would get a single class and that class would contain a lot of custom CSS in a separate CSS file. Though this is still the general practice, this practice leads to huge CSS files, reduces the ease of maintaining CSS and yields overall poorer developer experience. ', 'Another advantage of a utility framework is its superior performance with caching due to not busting the cache for small CSS changes. Tailwind has been designed with incredible sensible defaults to make your designs look and feel ""polished"" and ""designed"" through the careful use of color palettes, color shades, sizing consistency and modern web best-practices. It\'s also worth noting, that Tailwind is mobile-first and has an easy naming convention with responsive designs built-in.', ""Need some customizations? Tailwind's robust customization system will allow you to customize/tweak/modify everything in the framework through the use of the "", 'tailwind.config.js', ' file. The customizations of Tailwind are beyond the scope of this course but rest assured that the default Tailwind classes are almost always exactly what you will need.', 'Join the Scrimba community chat', 'Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
8,Learn CSS variables for free,Per Harald Borgen,Course level: Intermediate,"This tutorial teaches you CSS variables through eight interactive screencasts. It's value-packed from beginning to end, and is probably the fastest way to get an in-depth understanding of CSS Variables.","{'Learn CSS variables for free': ['1. Why learn CSS Variables - Intro tutorial', '2. Your first variable - CSS Variables tutorial', '3. Frontend Career Path', '4. Overriding variables - CSS Variables tutorial', '5. Local variables - CSS Variables tutorial', '6. Theming - CSS Variables tutorial', '7. Changing variables with JavaScript - CSS Variables tutorial', '8. Responsiveness and variables - CSS Variables tutorial', '9. Two inheritance examples - CSS Variables tutorial', '10. Congratulations on Completing Learn CSS Variables for Free 🎇']}","['Fundamentals of CSS Variables', 'Local variables and overriding', 'Creating themes with variables', 'Changing variables with JavaScript', 'Responsiveness with CSS Variables']",[],"['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed.']","Front-end developer and co-founder of Scrimba. Per loves helping other people learn new skills so that they can improve their lives. He makes his tutorials as simple as humanly possible, and focus on getting the students to the point where they can start building projects on their own.","['CSS Custom Properties (aka Variables) is a big win for front-end developers. It brings the power of variables to CSS, which results in less repetition, better readability and more flexibility.\xa0\nPlus, unlike variables from CSS preprocessors, CSS Variables are actually a part of the DOM, which has a lot of benefits.', ""The course contains eight interactive screencasts. All are short and to the point. At the end of most of them, the instructor asks you to solve a challenge, directly in the screencast window. \nThis is a great way of making sure the knowledge sticks, and you'll get to check if your solution matches the instructors."", 'You can follow the course creator Per Harald Borgen on Twitter ', 'here.', 'Join the Scrimba community chat', 'Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
9,Build and deploy your portfolio,Kevin Powell,Course level: Intermediate,This course will teach you to build and deploy a neat portfolio for yourself. Perfect to showcase your skills and experience to potential employers. You also get $100 in free credits from DigitalOcean!,"{'Build and deploy your portfolio': ['1. Introduction', '2. Setting things up - HTML', '3. Frontend Career Path', '4. The header area - HTML', '5. Intro section', '6. About me, Work and Footer - HTML', '7. Setting up the custom properties and general styles', '8. Styling the titles and subtitles', '9. Setting up the intro section', '10. Styling the services section', '11. The About me section', '12. The portfolio', '13. Adding the social icons with Font Awesome', '14. Styling the footer', '15. Setting up the navigation styles', '16. Creating the hamburger', '17. Adding the JS', '18. Creating the portfolio item page', '19. Customizing your page', '20. DigitalOcean Droplets - What they are and how to set one up', '21. DigitalOcean Droplets - Uploading files via FTP', '22. Congratulations Build and Deploy Your Portfolio 🎇']}",[],[],"['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed.']","Hi, I'm Kevin. I love to teach people how to make the web and how to make it look good while they're at it. Over 300.000 people follow my tutorials on YouTube.

I learned to make websites on my own. I know how fun and rewarding it is, but I also know that it can be incredibly frustrating. I'm here to help make your journey into web development as easy and as fun as possible. ","[""As developers and designers, we need to ways to showcase our skills to potential employers. There's no better way of doing this than a dedicated portfolio page. It gives you full control of how you'd like to present yourself."", ""In this course, the brilliant teacher Kevin Powell will take you through every single step of building a neat-looking portfolio website. You'll also learn to customize it to suit your personal style. Towards the end of the course, Kevin shows you how to deplopy the site to DigitalOcean, so that you will end up with a live website upon completing the course!"", 'The site is built without using any web frameworks, so the only prerequesites for this course are basic HTML and CSS skills.', 'Get $100 free credits from DigitalOcean', ""As a part of the course, you'll get $100 in free credits from DigitalOcean (new accounts only) so that you won't need to pay to get your site off the ground. The credits are valid for 60 days, so you'll have plenty of time to deploy and experiment with your live site without having to pay."", 'Enroll now to get your $100 free credits!', 'This course is also a part of our hugely popular ', 'Front-End Devloper Career Path', '.']"
10,Learn Binary Search in JavaScript,Jonathan Lee Martin,Course level: Advanced,"In this course, you'll practice your software craftsmanship skills by coding six different binary search algorithms. Each solution will teach you a new technique for solving problems as a software developer and level up your computer science skills in general.
","{'Learn Binary Search in JavaScript': ['1. Course Overview', '2. Binary Search', '3. Frontend Career Path', '4. Imperative', '5. Recursion', '6. Tail Recursion', '7. Array Splitting', '8. Array View', '9. Array Partition', '10. Wrap Up', '11. Congratulations on Completing Learn Binary Search in JavaScript ⭐️']}","['Binary Search', 'Big O notation', 'Imperative code', 'Recursion', 'Tail recursion', 'Array splitting', 'Array view', 'Partition']",[],"['Before taking this course, you should have a solid understanding of JavaScript. Here’s our suggested resources to get you up to speed.']","📖 Author
⚛️ Educator
👨‍🏫 International speaker
🎒 Digital nomad
📸 Photographer @ Yellowscale.com","['This course explores the delightful intersection of algorithms and software design. It levels up your craftsmanship by coding six different binary search algorithms. ', ""  Each algorithm solution will improve your skills as a software developer, as the concepts you'll learn are applicable well outside the scope of binary search."", '  The course is focused on ""learning by doing"". The instructor Jonathan strongly believes that the real learning happens when you - the learner - write the code. So instead of him writing it for you, he\'ll challenge you to do it first. ', ""  This is hard, and you'll struggle. But for every minute you struggle with the problem, you'll learn ten times more than you would if you only listened to Jonathan explain it to you. So make sure you try to solve the problems before you watch Jonathan’s solutions."", ""  You should have a good grasp of JavaScript before taking this course, so it's recommended that you already work as a developer, or are a bootcamp graduate. If you have a degree in computer science, you've probably already learned most of the concepts in the course. But, of course, feel free to take the course to solidify your skills.""]"
11,Practical math for frontend developers,Ryan Gonyon,Course level: Intermediate,"In just one hour, this course gives you enough math skills to become an efficient front-end developer. It's fully practical, with three app projects and several interactive coding challenges.
","{'Practical math for frontend developers': ['1. Practical Math For Front-End Developers', '2. App Layout and CSS calc() Introduction', '3. Frontend Career Path', '4. Your roll() Function', '5. Shopping Cart - Generate Data / Build Layout', '6. Shopping Cart - Calculate Total / Apply Tax Rate', '7. Shopping Cart (Bonus Challenge) - Weights', ""8. An Intro to JavaScript's Date Object"", '9. Weekly Schedule - Using Date() to Build Week / Generating Tasks', '10. Weekly Schedule - Build Layout / Display Data', '11. A Brief Exploration of CSS Shapes', '12. Monthly Expense Sheet - Generate and Display Month', '13. Monthly Expense Sheet - Generate, Display, and Track Expenses', ""14. That's all Folks"", '15. Congratulations on completing Practical Math for Frontend Developers! 🎉']}",[],[],"['Before taking this course, you should have a basic understanding of HTML, CSS, and JavaScript. Here’s our suggested resources to get you up to speed.']",Programming / Politics / Pokemon https://twitter.com/RadicalCoder,"['Are you looking to become a more effective developer by improving your fundamental math skills without reaching for NASA-level calculations? Look no further!', 'This course will teach you enough mathematics to build the following three projects in an efficient way:', 'A Shopping Cart', "", where you'll generate a list of products, calculate the total price of the products and apply a tax rate."", 'A Weekly Scheduling app', "", where you'll learn about  the Date object, perform layout manipulation and learn about the reduce function."", 'A Monthly Expense Sheet', "", which brings together everything you've learned and gives you a few handy tips and tricks."", '\u2028With 5 years of Web Dev experience, a B.S. in Computer Science and experience tutoring K-12 and University-level math, Ryan Gonyon is the perfect tutor for this course. \u2028\u2028So enroll in this course now, and level up your math skills!\u2028\u2028']"
12,Build reusable React,Cassidy Williams,Course level: Advanced,This course teaches you to build a reusable and declarative React component library. It's perfect for developers who are looking to build a scalable design system for their team and product.,"{'Introduction - Reusable React fundamentals': ['1. Course Introduction', '2. Rendering and Props', '3. Frontend Career Path', '4. Custom Events and Props', '5. Fundamentals Exercise: Badge Component'], 'Controlled components and refs': ['1. Building an interactive form', '2. What does ""controlled"" mean?', '3. Character Counter Input', '4. State in Class vs Function components', '5. Implementing useState', '6. The useRef Hook', '7. Updating Refs with Side Effects', '8. Forwarding Refs', '9. Toggleable Form'], 'Reducers': ['1. Why are reducers a part of React?', '2. How reducers work', '3. Reducers Exercise 1: Expanding our reducer function', '4. The useReducer Hook', '5. useReducer vs useState', '6. Custom Hooks', '7. Reducers Exercise 2: Character Sheet Application', '8. A Promise-based State Machine'], 'Compound components': ['1. A Single Data-Entry Point Component', '2. Reordering Elements', '3. Adding a disabled Property', '4. Too many props!', '5. What is a Compound Component?', '6. Replacing Props with Compound Components', '7. Sharing State with the Context API', '8. Adding More Context', '9. A Date Picker Compound Component', '10. Course Conclusion']}",[],[],[],Making memes and dreams... and software,"['If you’re looking to learn how to create a component library for your team using Javascript and React, you’re in the right place! ', 'Build Reusable React will teach you enough controlled components, refs, reducers and compound components to get your custom library off the ground. ', 'By the end, you’ll know how to build declarative, reusable components, ensuring your codebase adheres to the DRY (Do Not Repeat Yourself) principle.', 'On top of all that, this course is jam-packed with interactive challenges to stress-test your new knowledge and truly embed your learning, so you’ll become a truly effective React Developer in no time.', 'Your teacher is Cassidy Williams, a Principal Developer Experience Engineer at Netlify who has been teaching React both online and in person for several years, making her the perfect person to guide you through this learning experience. ', 'So what are you waiting for? Enroll now and start building that library!', 'This course is also a part of our hugely popular ', 'Front-End Devloper Career Path', '.']"
13,Learn D3 for free,Sohaib Nehal,Course level: Intermediate,"This D3 tutorial teaches you how to create powerful data visualizations for the web. It gives you a fast introduction to the key concepts of D3.js, like selections, data, axes, scales, bar charts, pie charts, SVG elements, and more.","{'Learn D3 for free': ['1. Introduction to D3', '2. Selection and manipulation - D3 tutorial', '3. Frontend Career Path', '4. Data Loading and binding - D3 tutorial', '5. Creating a simple bar chart - D3 tutorial', '6. Creating labels - D3 tutorial', '7. Scales - D3 tutorial', '8. Axes - D3 tutorial', '9. Creating SVG elements - D3 tutorial', '10. Creating a pie chart - D3 tutorial', '11. Create a line chart - D3 tutorial', '12. Congratulations on Completing Learn D3 for Free! 🎉']}","['D3 Basics', 'Selection and manipulation', 'Data loading', 'Data joins', 'Attributes', 'Axes', 'Scales', 'Elements', 'Labels', 'Paths', 'Creating SVG elements', 'Creating bar charts', 'Creating pie charts', 'Creating line charts']",[],"['Before taking this course, you should have a basic understanding of HTML, CSS, and JavaScript. Here’s our suggested resources to get you up to speed.']","Sohaib is a full-stack developer based in Karachi. He's passionate about travelling, meeting new people, trying new food, and discussing unique ideas. Sohaib has helped tens of thousands developers learn D3.js with his course and articles.","[""D3.js is the most popular data visualization library for the web. It's written in JavaScript and it allows you to make sense of your data through a powerful API.   D3 uses HTML, CSS, and SVG to create visualizations which can be viewed on any modern browser.  Throughout this course you'll learn the most important features of D3 while building four different data visualizations. You'll play around with the code whenever you want, so that you can be sure that you understand how it works.  "", ""What you'll learn:"", ""- Selection, Data loading, Data joins, Attributes, Axes, Scales, Elements, Labels, Paths, Creating SVG elements, Creating bar charts, Creating pie charts, Creating line charts.  If you complete this course, you'll know how to use the following features of D3: "", 'select()', ', ', 'selectAll()', ', ', 'append()', ', ', 'text()', ', ', 'attr()', '- ', 'data()', ', ', 'enter()', '- ', 'd3.max()', ', ', 'd3.min()', '- ', 'height', ', ', 'width', ', ', 'x', ', ', 'y', ', ', 'transform', ', ', 'fill', '- ', 'rect', ', ', 'line', ', ', 'circle', '- ', 'axisBottom()', ', ', 'axisTop()', ', ', 'axisRight()', ', ', 'axisLeft()', ',', 'scale()', ',', 'scaleLinear()', ', ', 'domain()', ', ', 'range()', ""...and much more!  This isn't a regular video course, it's a Scrimba course! This means you can "", 'interact', ' with the code inside the tutorials whenever you want, which makes learning much more fun!  The instructor behind the course is the eminent Sohaib Nehal. Feel free to reach out to him via Twitter ', '@Sohaib_Nehal', ' if you have feedback or questions.  ', 'Join the Scrimba community chat!', '  Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
14,Learn Merge Sort in JavaScript,Jonathan Lee Martin,Course level: Advanced,"In this course, you'll practice your software craftsmanship skills by coding six different merge sort algorithms. Each solution will teach you a new technique for solving problems as a software developer and level up your computer science skills in general.
","{'Learn Merge Sort in JavaScript': ['1. Intro', '2. Merge Sort', '3. Frontend Career Path', '4. Imperative', '5. Array Splitting', '6. Array View', '7. Queue', '8. Cursor', '9. Cursor + ArrayView', '10. Simple', '11. Wrap Up']}","['Merge Sort', 'Imperative', 'Array splitting', 'Array view', 'Queue', 'Cursor', 'Cursor + ArrayView', 'Simple', 'Improving your CS skills', 'Crafting exceptional code']",[],['This course is recommended for bootcamp graduates or working developers who have a good knowledge of JavaScript.'],"📖 Author
⚛️ Educator
👨‍🏫 International speaker
🎒 Digital nomad
📸 Photographer @ Yellowscale.com","['The course follows on from Jonathon Lee Martin’s Working Developer’s Guide to Algorithms and aims to help working developers or bootcamp graduates to step up their software design skills by learning to think algorithmically. ', ""Along the way, you'll learn to code six alternative implementations of the Merge Sort algorithm, as well as algorithm analysis and a handful of powerful design patterns. "", 'By the end, you’ll be more confident in your CS skills and have sharper problem-solving skills to boot. ']"
15,Learn Responsive Web Design,Kevin Powell,Course level: Intermediate,This course will take you to a professional level in responsive web design. You'll learn to build advanced layouts while solving fun coding challenges along the way.,"{'CSS Fundamentals': ['1. Welcome to the course!', '2. An Important note before we start', '3. Introduction to the CSS Fundamentals module', '4. Margin and Padding - Margins and spacing out text', '5. Margin and Padding - Collapsing margins', '6. Margin and Padding - Consistency and a new type of selector', '7. Inline and Block elements', '8. The span element', '9. Styling links', '10. Practice Time!', '11. Inline-block', '12. Styling buttons', '13. Specificity basics', '14. Specificity - two selectors of equal value', '15. Compound Selectors', '16. Compound selectors and specificity', '17. A better way to name our CSS classes', '18. The text properties', '19. Font-family and font stacks', '20. How to use Google fonts', '21. Inheritance', '22. Working with, overwriting, and applying inheritance', '23. Putting it all together', '24. Putting it all together - the CSS', '25. Solution to the challenge and module wrap up'], 'Starting to think responsively': ['1. Starting to think responsively', '2. CSS Units', '3. CSS Units - Percentage', '4. Controlling the width of images', '5. min-width and max-width', '6. CSS Units - The em unit', '7. The problem with ems', '8. CSS Units - rems', '9. Picking which unit to use', '10. ems and rems - an example', '11. Flexbox refresher and setting up some HTML', '12. Basic styles and setting up the columns', '13. Adding the background color ', '14. Setting the column widths', '15. Spacing out the columns', '16. Controlling the vertical position of flex items', '17. Media Query basics', '18. Making our layout responsive with flex-direction', '19. flex-direction explained', '20. Creating a navigation', '21. Using flexbox to start styling our navigation', '22. Making our navigation look good', '23. Adding the underline', '24. A more complicated navigation', '25. Making the navigation responsive', '26. Taking a look at the rest of the project', '27. Setting up the structure', '28. Featured article structure', '29. The home page - HTML for the recent articles', '30. home page - html for the aside', '31. Starting the CSS for our page', '32. Starting the layout - looking at the big picture', '33. Starting to think mobile first', '34. Styling the featured article', '35. Changing the visual order with flexbox', ""36. Playing with the title's position, and the downsides of negative margins"", '37. Styling recent articles for large screens', '38. Changing image sizes with object-fit', '39. Setting up the widgets and talking breakpoints', '40. Using a new pseudo-class to wrap-up the homepage', '41. Creating the recent posts page', '42. Setting up the About Me page', '43. Fixing up some loose ends', '44. Important Note: The viewport meta tag', '45. Module wrap up'], 'Stepping up our style': [""1. It's time to step up our style"", '2. A look at line-height', '3. text-transform: uppercase', '4. Making things easier to read with letter-spacing', '5. A nice color trick with rgba()', '6. background-images', '7. Background images and the file path (very important note)', '8. Controlling our background images', '9. BBQ Splash Page - Project Introduction', '10. Writing the HTML for the BBQ splash page', '11. Starting to style it up - BBQ Splash Page', '12. Adding the background image - BBQ Splash Page', '13. Changing the order - BBQ Splash Page', '14. Styling the main content area - BBQ Splash page', '15. Adding the media query - BBQ Splash Page', '16. Setting up the typography for large screens - BBQ Splash Page', '17. Starting to set things up for large screens - BBQ Splash Page', '18. Viewport units', '19. Adding viewport units to the BBQ Splash Page', '20. Enter box-sizing: border-box', '21. Using flexbox to vertically center the main content - BBQ Splash Page', '22. Fixing the intro section on both small and large screens - BBQ Splash Page', '23. Dealing with very large screens solution #1', '24. Dealing with very big screens solution #2', '25. The very basics of forms', '26. Form basics - form attributes', '27. The basics of styling form', '28. Adding the form - BBQ Splash Page', '29. Starting to style up the form - BBQ Splash Page', '30. Making the inputs look good - BBQ Splash Page', '31. CSS Gradients', '32. Styling the button - BBQ Splash Page', '33. Basic transitions', '34. Intro to transforms (and a quick word on performance)', '35. We can transition more than :hover', '36. Border gradients', '37. Blending images, colors, and gradients with background-blend-mode', '38. Wrap up'], 'Taking flexbox to the next level': ['1. Taking flexbox to the next level', '2. flex-direction, flex-wrap, and flex-flow', '3. justify-content and align-items and their relationship to flex-direction', '4. Exploring align-content', '5. flex-grow and flex-shrink explained', '6. flex-basis', '7. The flex shorthand property', '8. Aligning individual elements with align-self', '9. Margin auto and flexbox', '10. Building a card component with flexbox - Introduction', '11. Building a card component with flexbox - The markup', '12. Building a card component with flexbox - Typography', '13. Building a card component with flexbox - Mobile layout', '14. Building a card component with flexbox - Large screens part one', '15. Building a card component with flexbox - Large screens part two', '16. Centering something on the screen with flexbox', '17. Module wrap-up'], 'CSS Grid: The ultimate layout tool': ['1. Introduction to CSS Grid', '2. Setting up a basic grid', '3. Placing items on the grid', '4. grid-row and grid-column shorthands', '5. Spanning columns', '6. Some similarities to flexbox', '7. Using grid for our card component', '8. The grid-gap property', '9. Adding the gap to our card', '10. The implicit and explicit grid', '11. Exploring grid areas', '12. grid-areas and media queries', '13. minmax()', '14. the fr unit', '15. minmax() and the fr unit', '16. Putting grid to use - part 1', '17. Putting grid to use - part 2', '18. repeat()', '19. auto-fit and auto-fill'], 'Taking it to the next level': ['1. Taking it to the next level', '2. Analyzing the layouts', '3. Starting work on the homepage', '4. The HTML for the homepage', '5. The first lines of CSS you should always write', '6. Setting up our grid for small screens', '7. Continuing the hero area', '8. The ""info"" section', '9. Setting up the footer', '10. Using Font Awesome for our icons', '11. Wrapping up the footer', '12. Setting up the grid, and hero, for larger screens', '13. Setting up the rest of the page for larger screens', '14. Starting to style our navigation', '15. Setting up our navigation for small screens with positioning', '16. Making the close button', '17. Creating the ""open"" state and adding JavaScript to close our navigation', '18. Adding the open button to our navigation', '19. 18 - Styling the navigation for large screens', '20. Fixing up the navigation and hero area', '21. Creating the second page', '22. Styling the about page', '23. Exploring box-shadows to get the effect on our images', '24. Using pseudo-elements to add the yellow lines', '25. Adding the yellow bar to our titles', '26. Creating the contact page', '27. Styling the contact form', '28. Styling the contact form for larger screens', '29. The loose ends', '30. You did it!']}","['CSS basics', 'Sane CSS defaults', 'Specificity and selectors', 'CSS best practices', 'Text and fonts', 'Units and responsive Text', 'Flexbox layouts', 'Vertical aligning of content', 'Design best practices', 'Media Queries and viewports', 'Forms and how to make them look good', 'Advanced flexbox concepts', 'CSS Grid layouts', 'Icons with Font Awesome', 'Transitions and animations', 'Adding it all together']","['The simple life blog', 'BBQ splash page', 'Marketing agency website']","['Before taking this course, you should have a basic understanding of HTML and CSS. You should know how to build simple layouts using those technologies.']","Hi, I'm Kevin. I love to teach people how to make the web and how to make it look good while they're at it. Over 300.000 people follow my tutorials on YouTube.

I learned to make websites on my own. I know how fun and rewarding it is, but I also know that it can be incredibly frustrating. I'm here to help make your journey into web development as easy and as fun as possible. ","['Let me ask you a few questions:', '\n', 'Do you want to learn to build responsive websites that look 100% professional?', '\n', 'Do you want to be confident that your website works well on all devices?', '\n', 'Are you tired of feeling that your CSS is a mess?', '\n', '\n', 'If your answer is YES, then this is the perfect course for you!', ""It gives you a deep understanding of CSS and responsive design while keeping you fully engaged along the way. You'll learn to build four different layouts: a blog, a landing page, a banner, and a company website. Each one will take your skills to a new level."", 'The best learning experience', ""To ensure that the knowledge sticks with you, you are given interactive coding challenges as you progress.\nIt's as if you and the instructor are pair-programming together!"", ""This kind of fast-paced interactivity simply isn't possible with any other platform than Scrimba. And if you get stuck, you have exclusive access to the teacher's Slack channel."", 'This course is also a part of our hugely popular ', 'Front-End Devloper Career Path', '.']"
16,Learn Bootstrap for free,Neil Rowe,Course level: Intermediate,This tutorial teaches you Bootstrap 4 through ten interactive screencasts. It gives you a fast an easy way to learn the latest features of Bootstrap so that you can take advantage of them in your next project.,"{'Learn Bootstrap for free': ['1. Course Introduction - Learn Bootstrap 4', '2. Responsive Grid Systems', '3. Frontend Career Path', '4. Responsive Navbars', '5. Modals', '6. Forms', '7. List Groups', '8. Cards', '9. Tables', '10. Alerts', '11. Navigation Options', '12. Congrats & Next Steps!']}","['Bootstrap 4 classes', 'Responsive grid system', 'Columns and rows', 'Components', 'Responsive navbars', 'Margins', 'Modals, dialogs', 'Buttons', 'Forms', 'List groups', 'Badges, pills', 'Cards', 'Tables', 'Alerts', 'Navigation options', 'Links']",[],"['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed:']","Neil Rowe is the man behind the popular YouTube channel Coders Guide, where his series on Bootstrap has been viewed by several hundred thousand people.","['Bootstrap 4 represents a major rewrite of the library. ', '  Not only are there a lot of changes under the hood, but there are also several new concepts you’ll need to wrap your head around.', '  This tutorial course takes you through everything you need to know in order to create full-blown websites with Bootstrap v4.', ""  Whether you've been working with Bootstrap before, or are completely new to the framework, this course will get you up to speed with the newest version."", ""  And remember, this isn't a regular video course, it's a Scrimba course! This means you can "", 'interact', ' with the code inside the tutorials whenever you want, which makes learning much more fun!', '  So claim your free spot in this course today!', '   ', 'Join the Scrimba community chat', '  Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
17,Build a color tool in vanilla JavaScript,James Q Quick,Course level: Intermediate,"Build a cool color lighten/darken tool from scratch and sharpen up your HTML, CSS and vanilla JavaScript skills along the way! 
","{'Build a color tool in vanilla JavaScript': ['1. Course Intro', '2. Create the Base Layout', '3. Create the Base Styling', '4. Check for Valid Hex Color in JavaScript', '5. Display Color From User Hex Input', '6. Convert Hex Color to RGB', '7. Convert RGB Color To Hex - Challenge Requirements', '8. Convert RGB To Hex - Challenge Solution', '9. Display Percentage from Slider', '10. Alter Color By Percentage', '11. Ensure Hex Values Stay Between 0 and 255', '12. Alter Color Based On User Input', '13. Create Custom Toggle Button Layout', '14. Create Custom Toggle Button Styling', '15. Create Custom Toggle Functionality in JavaScript', '16. Alter Color Based on Lighten/Darken Toggle State', '17. Input Reset Functionality - Challenge Requirements', '18. Add Color Reset Functionality - Challenge Solution', '19. Course Outro', '20. Congratulations on completing Build a color tool in vanilla JavaScript! 🎉']}","['Check for a valid hex color', 'Convert hex to RGB', 'Display percentage from slider', 'Alter color by percentage', 'Create a toggle', 'Reset functionality', 'parseInt', 'textContent', 'Math.min and Math.max', 'HTML DOM style Property']",[],"['Before taking this course, you should have a solid understanding of HTML, CSS and JavaScript.']","Web Developer, Speaker, and Teacher. ","['This course hones your HTML, CSS and vanilla JavaScript skills by building a color lighten/darken tool. \nThroughout the 19 lessons, you’ll solve several interactive challenges which will test your coding knowledge and let you in on a few handy hints along the way. ', 'You’ll build out the skeleton HTML, style it with CSS and add a range of interactive features using vanilla JS - no frameworks required! ', 'By the end of the course, you’ll have built a large project which will look great on your portfolio or pushed to your Github profile - so dive right in and get ready for a colour-switching fun rollercoaster! ', 'Join the community!', 'Learning alone can be lonely. Click here to join our Discord server and connect with other Scrimba learners!']"
18,Learn Bulma CSS for free,Zaydek Gualtieri,Course level: Intermediate,This tutorial teaches you Bulma CSS through 13 interactive screencasts. In less than an hour you'll have built three websites with the popular CSS framework.,"{'Learn Bulma CSS for free': ['1. Intro to the Bulma CSS course', '2. Heroes in Bulma CSS', '3. Frontend Career Path', '4. Columns in Bulma CSS', '5. Colors in Bulma CSS', '6. Media  in Bulma CSS', '7. Bulma and CSS Grid', '8. Headers in Bulma CSS', '9. Images in Bulma CSS', '10. Content in Bulma CSS', '11. Backgrounds in Bulma CSS', '12. Navbars in Bulma CSS', '13. Creating a header for our launch page', '14. A Responsive Grid in Bulma CSS', '15. Congratulations on Completing Learn Bulma CSS for Free! ✨']}","['Bulma CSS Introduction', 'Bulma classes', 'Modifiers and helpers', 'Color helpers', 'Padding', 'Width', 'Center content', 'Titles', 'Columns', 'Container', 'Hero', 'Section', 'Navbar', 'Notifications', 'Bulma and CSS Grid']",[],"['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed.']","Zaydek is a self-taught designer and programmer. He's created three popular Scrimba courses, all of which inspires the students to be creative with the tools they learn. Zaydek is especially interested in distributed self-education.","['Bulma is the brainchild of CSS Guru Jeremy Thomas ', '@jgthms', "". \nIt's a modern CSS framework based on Flexbox. \nThe framework makes scaffolding and designing websites a breeze with best-in-class documentation and well-designed, intuitive components and modifiers. "", ""Bulma is great not just for building but learning best HTML and CSS practices, too! It's like having "", '@jgthms', ' there the whole time. ', ""In this course, you'll learn to create three beautiful, responsive websites with Bulma in less than an hour."", ""And remember, this isn't a regular video course, it's a Scrimba course! This means you can "", 'interact', ' with the code inside the tutorials whenever you want, which makes learning much more fun!', 'Have a question, comment, or feedback? Feel free to reach out to the course creator Zaydek at Twitter: ', '@username_zaydek', '.', 'Join the Scrimba community chat', 'Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
19,Learn Markdown,Dylan C. Israel,Course level: Beginner,Start your own blog and learn all the essential Markdown tips and tricks at the same time.,"{'Learn Markdown': ['1. Introduction', '2. Course Overview', '3. Setup', '4. Frontend Career Path', '5. Paragraphs and Headings', '6. Challenge: Starting our Article', '7. Challenge: Introductory Paragraph', '8. Bold, Italic and Strikethrough', '9. Challenge: 2nd Paragraph', '10. Blockquotes & Horizontal Rules', '11. Challenge: Organization and Quote', '12. Lists', '13. Challenge: 3 Pieces of Information', '14. Code Blocks', '15. Images', '16. Challenge: Spice It Up', '17. Links and Emails', '18. Challenge: About Yourself', '19. Extended Syntax: Introduction', '20. Extended Syntax: Tables', '21. Extended Syntax Task Lists', '22. Extended Syntax: Automatic URLs', '23. Final Challenge', '24. Final Challenge Part 2', ""25. What's Next?""]}","['What is Markdown?', 'Headings', 'Paragraphs', 'Bold, italic & strikethrough', 'Blockquotes', 'Horizontal rules', 'Lists', 'Code blocks', 'Links and emails', 'Extended tables', 'Tables', 'Task lists']",[],"[""You'll benefit most from this course if you have a solid understanding of HTML. If you're not there yet, check out our free course.""]",I teach tens of thousands of students monthly about web development.,"['Markdown', ' is a lightweight markup language for creating formatted text using a plain-text editor. ', 'It is used for shorthand HTML for several types of applications including README files, blogs, forums, documentation, messaging and more!  ', '  Knowledge of Markdown is a vital skill for any developer, but the good news is that it is relatively easy to learn, especially when you’re studying with Scrimba’s interactive platform. ', '  In this short but sweet course, you’ll learn the key features of Markdown which will help you to get started in your coding career. Throughout 24 interactive screencasts, you’ll learn how to create headings, paragraphs, text styling, lists, blockquotes, horizontal rules, code blocks, links, emails, tables and more! ', '  Best of all, you’ll learn by doing by ', 'creating your own blog', ' on the popular tech blogging site dev.to. Having an online presence is a fantastic way to take your coding career to the next level and document your progress, so why not get started today? ', '  Good luck and happy coding! ']"
20,Learn Regular Expressions,freeCodeCamp,Course level: Intermediate,This tutorial teaches you regex in JavaScript through 34 screencasts. It explains regular expressions step-by-step from basic to advanced so that you don't fall off along the way. This ensures that you finally learn regex once and for all.,"{'Learn Regular Expressions': ['1. Regular Expressions Intro', '2. Using the Test Method ', '3. Frontend Career Path', '4. Match Literal Strings', '5. Match a Literal String with Different Possibilities', '6. Ignore Case While Matching', '7. Extract Matches', '8. Find More Than the First Match', '9. Match Anything with Wildcard Period', '10. Match Single Character with Multiple Possibilities', '11. Match Letters of the Alphabet', '12. Match Numbers and Letters of the Alphabet', '13. Match Characters that Occur One or More Times', '14. Match Characters that Occur One or More Times', '15. Match Characters that Occur Zero or More Times', '16. Find Characters with Lazy Matching', '17. Find One or More Criminals in a Hunt', '18. Match Beginning String Patterns', '19. Match Ending String Patterns', '20. Match All Letters and Numbers', '21. Match Everything But Letters and Numbers', '22. Match All Numbers', '23. Match All Non-Numbers', '24. Restrict Possible Usernames', '25. Match Whitespace', '26. Match Non-Whitespace Characters', '27. Specify Upper and Lower Number of Matches', '28. Specify Only the Lower Number of Matches', '29. Specify Exact Number of Matches', '30. Check for All or None', '31. Positive and Negative Lookahead', '32. Reuse Patterns Using Capture Groups', '33. Use Capture Groups to Search and Replace', '34. Remove Whitespace from Start and End', '35. Regular Expressions Outro']}","['Regex basics', 'Test matches', 'Literal strings', 'Case insensitive', 'Single character', 'Match letters', 'Match numbers', 'Single match', 'Multiple matches', 'Wildcards', 'Lazy matching', 'Begins with match', 'Ends with match', 'Inclusive match', 'Exclusive match', 'Whitespace match', 'Lookahead', 'Capture groups']",[],"['Before taking this course, you should have a basic understanding of JavaScript. Here’s our suggested resource to get you up to speed.']","freeCodeCamp is a community that helps you learn to code, then get experience by contributing to open source projects used by nonprofits. Their Scrimba sceencasts are recorded by their brilliant instructor Beau Carnes and are based on their core curriculum.","[""This course features freeCodeCamp's Regular Expressions curriculum recorded as Scrimba screencasts. It introduces you to regular expressions (also called regex or regexp) through the lens of JavaScript. And as this is a Scrimba course, you'll be able to experiment with the expressions whenever you want. This is crucial when learning regex, as there are a lot of details to remember. Interacting with the code makes the knowledge stick, as opposed to simply watching normal video tutorials."", 'About freeCodeCamp', 'The lectures are recorded by ', 'Beau Carnes.', "" Beau is the man behind some of the most popular courses at freeCodeCamp's YouTube channel, so you'll be in good hands. He explains concepts clearly and thoroughly, but without wasting your time."", 'Join the Scrimba community chat', 'Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
21,React interview questions,Cassidy Williams,Course level: Intermediate,"Learn to ace a React Interview with a Principal Developer Experience Engineer as your guide! In 40 minutes, you’ll cover topics such as the Virtual DOM, JSX, Props, Context, Refs, Effects, the Lifecycle and more! By then end, you’ll be ready to tackle your technical interview with style.","{'React interview questions': ['1. React Interview Questions Course Introduction', '2. The Virtual DOM', '3. React Limitations', '4. JSX', '5. Props', '6. State and Lifecycle', '7. Effects', '8. Refs', '9. Context', '10. Miscellaneous (but important!) Questions', '11. React Interview Questions Course Conclusion']}","['The Virtual DOM', 'React limitations', 'JSX', 'props', 'State', 'Lifecycle', 'Spread & Rest Operators', 'Effects', 'Refs', 'Context', 'Miscellaneous but important questions', 'Resume tips', 'Job search strategy']",[],"['Before taking this course, you should have a solid understanding of JavaScript and React.']",Making memes and dreams... and software,"['If you want to test out your React skills, fill in any gaps in your knowledge and learn to nail that React interview, this is the course for you.    In just 40 minutes, our popular teacher Cassidy Williams introduces some of the most common React interview questions and guides you through the best answers, helping you to knock the socks off your future interviewers.     This course is perfect for anyone who wants a job working with React and already has a decent grasp on the subject.    That said, you could also use the course to check whether there are any React concepts you need to brush up on.      In this course, you’ll test your React skills, go over some hands-on interview questions and have fun!    So what are you waiting for? Let the interview practice begin!   This course is also a part of our hugely popular ', 'Front-End Developer Career Path', '.']"
22,Learn CSS Grid for free,Per Harald Borgen,Course level: Intermediate,"This tutorial teaches you CSS Grid through 14 interactive screencasts. You'll learn all the key concepts while building three awesome layouts: a website, an image grid, and an article. Plus, you'll learn how to combine CSS Grid with Flexbox.","{'Learn CSS Grid for free': ['1. Intro to the CSS Grid course', '2. Your first grid - CSS Grid tutorial', '3. Frontend Career Path', '4. Fraction units and repeat - CSS Grid tutorial', '5. Positioning items - CSS Grid tutorial', '6. Template areas - CSS Grid tutorial', '7. Auto-fit and minmax - CSS Grid tutorial', '8. Implicit rows - CSS Grid tutorial', '9. An awesome image grid - CSS Grid tutorial', '10. Named Lines - CSS Grid tutorial', '11. justify-content and align-content  - CSS Grid tutorial', '12. justify-items and align-items - CSS Grid tutorial', '13. Auto-fit vs. auto-fill - CSS Grid tutorial', '14. Creating an article layout - CSS Grid tutorial', '15. Grid vs. Flexbox - CSS Grid tutorial', '16. Congrats on completing the CSS Grid course!']}","['CSS Grid fundamentals', 'Starting with grid', 'Responsive grids', 'Fraction units', 'Repeat', 'Positioning items', 'Template areas', 'Auto-fit', 'minmax', 'Implicit rows', 'Named lines', 'justify-items', 'align-items', 'auto-fit vs auto-fill', 'Create an article layout', 'An awesome image grid']",[],"['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed.']","Front-end developer and co-founder of Scrimba. Per loves helping other people learn new skills so that they can improve their lives. He makes his tutorials as simple as humanly possible, and focus on getting the students to the point where they can start building projects on their own.","['The CSS Grid module makes it easier than ever to create website layouts. It simplifies both your HTML and CSS, while simultaneously giving you more control over your layout. You can use it without any framework, as the CSS Grid module is native to the browser.', ""So if you want to stay up-to-date as a front end developer, you'll need to learn how to use CSS Grid! Luckily though, it's not hard. And this course teaches you all you need to know. For free, of course."", 'Course content', 'This course contains three sections. The first two will teach you the core concepts you need to know to get started. Together, we’ll build both a website layout and a super cool image grid.', 'In the bonus section, you’ll learn how to create article layouts with CSS Grid plus some more advanced concepts.', 'What you’ll learn', '\n', 'CSS Grid fundamentals', '\n', 'Your first grid', '\n', 'Responsive grids', '\n', 'How to create pages, image grids, and articles', '\n', 'How to quickly prototype websites', '\n', 'How to use Grid with Flexbox', '\n', 'Advanced concepts', '\n', '\n', ""You'll be proficient with the following parts of CSS Grid when you complete the course:"", '\n', 'display: grid', ', ', 'grid-gap', '\n', 'grid-template', ', ', 'grid-template-colums', ', ', 'grid-template-rows', '\n', 'fr', ', ', 'repeat', ', ', 'minmax', ', ', 'auto-fit', ', ', 'auto-fill', '\n', 'grid-auto-rows', '\n', 'grid-colum', ', ', 'grid-row', '\n', 'grid-template-areas', ' and ', 'grid-area', '\n', 'justify-items', ', ', 'align-items', '\n', 'justify-self', ', ', 'align-self', '\n', '\n', ""And remember, this isn't a regular video course, it's a Scrimba course! Which means you can "", 'interact', ' with the code inside the tutorials whenever you want. This makes learning a lot more fun!', 'Feel free to reach out to the instructor ', 'Per Harald Borgen on Twitter', ' if you have feedback or questions.', 'Join the Scrimba community chat', 'Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
23,Introduction to clean code,Dylan C. Israel,Course level: Intermediate,"Learning clean code is one of the best career investments you can make. By spending one hour to learn the fundamentals, you get to reap the benefits across all your future code bases. It's 10x the payoff for the effort.","{'Introduction to clean code': ['1. Clean Code: Introduction', '2. Introduction to Linters', '3. Clean Variables Part 1', '4. Frontend Career Path', '5. Clean Variables Part 2', '6. Clean Variables Challenge', '7. Clean Variables & Clean Properties (Challenge)', '8. Clean Variables: Magic Numbers 🧙', '9. Clean Variables: Magic Numbers (Challenge) 🧙', '10. Clean Organization: Spacing and Returns', '11. Clean Functions: Introduction', '12. Clean Functions: Limit Parameters', '13. Clean Functions: Naming & Standardization', '14. Clean Functions: Naming and Standardization (Challenge)', '15. Clean Functions:  Encapsulating Conditionals', '16. Clean Functions: Encapsulating Conditionals (Challenge)', '17. Clean Comments: Introduction', '18. Avoiding Comments with Refactoring', '19. Avoiding Comments with Git', '20. Clean Comments: Avoid Visual Markers', '21. Clean Comments: Avoid Visual Markers (Challenge)', '22. What is a good comment?', '23. Good Comments (Challenge)', '24. Clean Code: Final Challenge 🤺', '25. Clean Code: Whats Next? 🤔']}","['Intro to Linters', 'Clean Variables', 'Clean Properties', 'How to avoid magic numbers', 'Clean Functions', 'Limit paramenters', 'Naming & Standardization', 'Encapsulating Conditionals', 'Minimizing comments with Refactoring', 'Minimizing comments with Git', 'Avoiding visual markers', 'Good Comments']",[],"['Before taking this course, you should have a solid understanding of JavaScript.']",I teach tens of thousands of students monthly about web development.,"['In this course, professional developer and coding Youtuber Dylan Israel takes you through some top tips to help you polish your code, making it more professional, easier to read and understand, and less prone to bugs.   ', 'In just one hour, you’ll cover how to improve your variables, functions, comments, and more! By the end, you’ll have the knowledge to improve your existing and future projects and ensure that your code is as searchable, readable and understandable as possible. ']"
24,JavaScript deep dive,Reed Barger,Course level: Intermediate,"This course will teach you advanced JavaScript from the ground up. It features a systematic walk-through of the most important concepts of the language, and teaches you to build a Google Keep clone and a Hacker News clone in vanilla JavaScript.","{'Getting started': ['1. Welcome to the course!', '2. Start Using JavaScript'], 'Variables & Strings': ['1. Module Intro: Variables & Strings', '2. Variable Basics with var', '3. Challenge: Variable Basics', '4. Better Code with Strict Mode', '5. Why Use let & const Over var', '6. Challenge: const & let', '7. How Const Improves Your Code', '8. Why Block Scoping Matters', '9. How Template Literals Improve Strings', '10. Challenge: Template Literals', '11. How Variables Should Be Named'], 'Types & Conditionals': ['1. Module Intro: Types & Conditionals', '2. Conditionally Run JavaScript Code', '3. Challenge: Your First Conditional', '4. Types and How They Can Be Changed', '5. Challenge: Types', '6. How to Shorten Conditionals with Ternaries', '7. Challenge: Ternaries', '8. Even Shorter Conditionals with Short-Circuiting', '9. Challenge: Short-Circuiting'], 'Functions': ['1. Module Intro: Functions', '2. Why We Need Functions', '3. Challenge: Your First Function', '4. What is a Closure and Why it Matters', '5. Challenge: Count Downwards Using Closure', '6. Better Functions with Default Parameters', '7. Shorter Functions with Arrow Functions', '8. Challenge: Arrow Functions', '9. Partial Application for Single-Responsibility Functions', '10. How Functions Should Be Named'], 'Objects & Maps': ['1. Module Intro: Objects & Maps', '2. Use Objects for Managing Key-Value Pairs', '3. Challenge: Your First Object', '4. Understand Primitive vs Object Types', '5. Get and Modify Object Data', '6. Easy Property Access with Destructuring', '7. Challenge: Object Destructuring', '8. Merge Objects with Object Spread', ""9. How Maps Can Do What Objects Can't"", '10. Challenge: Your First Map', '11. Improve Methods with Arrow Functions'], 'Arrays & Sets': ['1. Module Intro: Arrays', '2. Build Flexible Collections with Arrays', '3. Challenge: Your First Array', '4. Check Element Existence in Arrays', '5. Challenge: .some and .every', '6. Perform Actions on All Elements', '7. Get Subsets of Arrays', '8. Transform Arrays with .reduce()', '9. Challenge: Transform Arrays with .reduce()', '10. Understand the Power of .reduce()', '11. Avoid Mutations with Array Spread ', '12. Mold Arrays with the Spread Operator', '13. More Flexible Arrays with Destructuring', '14. Challenge: Array Destructuring', '15. Turn Objects into Flexible Arrays', '16. Get Unique Sets of Data', '17. Use New, Immutable Array Features'], 'Classes': ['1. Module Intro: Classes', '2. What Are Constructor Functions?', '3. Challenge: Your First Constructor Function', '4. Understand the Prototype Chain', '5. Easy Prototypal Inheritance with Classes', '6. Challenge: Your First Class', '7. Share Class Features with Extends', '8. How To Get, Set and Simplify Classes', '9. Fix Context Problems with .bind()'], 'DOM': ['1. Module Intro: DOM', '2. What is the DOM?', '3. Get Single and Multiple Elements', '4. Creating and Modifying HTML Elements', '5. Challenge: Creating and Modifying HTML Elements', '6. Dynamically Add CSS Styles', '7. Understand and Work with Events', '8. Challenge: Events'], 'Async JavaScript': ['1. Module Intro: Async JavaScript', '2. The Problem with Callbacks', '3. Fix Callback Hell with Promises', '4. Make Network Requests with fetch()', '5. Challenge: Fetch API', '6. Dead-Simple Promises with async-await', '7. Catch Errors with async-await', '8. Challenge: async-await'], 'Google Keep clone': ['1. Module Intro: Google Keep Clone', '2. Google Keep - Project Setup', '3. Google Keep - Expanding and Closing Notes', '4. Google Keep - Storing Notes in the App', '5. Google Keep - Displaying Notes in the App', '6. Google Keep - Improving Functionality', '7. Google Keep - Editing Notes', '8. Google Keep - Changing Note Color', '9. Google Keep - Deleting Notes', '10. Google Keep - Storing Notes in the Browser'], 'Essential concepts': ['1. Module Intro: Essential Concepts', '2. Share App Code with Modules', '3. Challenge: Modules', ""4. Know What 'this' is at Any Time"", '5. Understand State and State Management', '6. How Reducers Help Manage State', '7. Avoid Imperative, Write Declarative Code'], 'Hacker News clone': ['1. Module Intro: Hacker News Clone', '2. Hacker News - Creating HTML and CSS', '3.  Hacker News - Adding Pages', '4. Hacker News - Requesting Data from API Endpoint', '5. Hacker News - Formatting Stories', '6. Hacker News - Creating Separate Pages for Stories', '7. Hacker News - Formatting Comments', '8. Hacker News - Building a Store', '9. Hacker News - Toggling Stories in and out of Favorites', '10. Hacker News - Building the Favorites Page']}","['Variables / Strings', 'Conditionals', 'Functions', 'Partial application', 'Currying', 'Objects', 'Set', 'Arrays', 'Classes', 'Constructor functions', 'Control flow', 'DOM', 'Async JavaScript', 'Immutability', 'Closures', 'this', 'Loops', 'state', 'Side effects', 'High-order functions', 'Cutting-edge JavaScript', 'And much more!']","['Hacker News clone', 'Google Keep clone']","[""Before taking this course, we recommend that you have a basic understanding of JavaScript. While Reed teaches the language from the bottom up, it will help you if you have poked around with the language a bit, so that everything isn't totally new for you.""]","Hi, I’m Reed Barger, a professional JavaScript developer who has helped over 15,000 developers level up their JavaScript skills in the last year alone and I will do the same for you. I know what it takes to be a JavaScript expert and I’ve packed it all right here into this course.","['There’s no question— if you want to be a developer, the language to learn is JavaScript. It’s the engine of the web and if you know JavaScript, you can make software usable by everybody on any possible device.', 'However, navigating the JavaScript ecosystem today is harder than ever before. What exactly do you need to learn?  And how do you learn it all? Where do you even begin?', 'Welcome to ""JavaScript deep dive"", a course based around you and your goals—designed to teach you JavaScript in the best way possible, so you can build amazing apps, master the language, and transform your career.', 'Here’s something you may not know—it’s not good enough to just learn a framework like React; in fact, there is nothing that will supercharge your career more than learning JavaScript itself.', 'This course does just that—you’ll learn next-level JavaScript from the beginning. It’s going to teach you exactly the JavaScript you need, and leads directly into any JavaScript library or framework you want to learn (like React, Angular, Vue).', 'You’ll learn concepts essential to making any serious app or program, break through the hard parts of the language, all while working through fun coding challenges to practice all of these concepts. And to top it off, you’ll solidify your learning by building apps, fun, practical, real-world apps like the ones you use daily.']"
25,Frontend interview tips,Dylan C. Israel,Course level: Intermediate,Learn how to nail that frontend interview with an experienced developer who has been on both sides of the interview table!,"{'Frontend interview tips': ['1. Course Introduction', '2. Falsy Values', '3. const vs let vs var', '4. Double vs triple equal', '5. map() vs filter() vs reduce()', '6. undefined vs null', '7. Data Types', '8. Spread & Rest Operators', '9. Destructuring Objects and Arrays', '10. Git Fundamentals', '11. Agile & Scrum', '12. CSS Selectors', '13. Responsive Design', '14. Number Issues', '15. Promises', '16. Pass by value vs pass by reference', '17. Five questions to be prepared for', '18. Five preparation tips', '19. Got any questions for me?', '20. GitHub tips', '21. LinkedIn tips', '22. Resume tips', '23. Job search strategy']}","['Falsy Values', 'const vs let vs var', 'Double vs triple equal', 'map() vs filter() vs reduce()', 'undefined vs null', 'Data Types', 'Spread & Rest Operators', 'Destructuring Objects and Arrays', ' Git Fundamentals', ' Agile & Scrum', ' CSS Selectors', ' Responsive Design', ' Number Issues', ' Promises', ' Pass by value vs pass by reference', ' Five questions to be prepared for', ' Five preparation tips', ' Got any questions for me?', ' GitHub tips', ' LinkedIn tips', 'Resume tips', 'Job search strategy']",[],"['Before taking this course, you should have a solid understanding of HTML, CSS and JavaScript.']",I teach tens of thousands of students monthly about web development.,"[""If you're looking to become a developer, it's never a bad idea to brush up on your frontend interview skills. This course is the perfect place to do it. Led by our popular teacher, Dylan Israel, you’ll practice technical questions such as "", 'undefined', ' vs ', 'null', ', CSS selectors, promises, data types and double versus triple equal, to help you prepare for the all-important interview. ', ""You'll also get valuable tips on how to polish your GitHub and LinkendIn profiles, and an awesome job search strategy. Let’s get nailing those interviews! "", 'This course is also a part of our hugely popular ', 'Front-End Devloper Career Path', '.']"
26,Learn Flexbox for free,Per Harald Borgen,Course level: Intermediate,This tutorial teaches you CSS Flexbox through 12 interactive screencasts. You'll learn all the key concepts in addition to building a responsive navbar and a neat image grid.,"{'Learn Flexbox for free': ['1. Your first Flexbox layout - Flexbox tutorial', '2. Main axis and cross axis - Flexbox tutorial', '3. Frontend Career Path', '4. Justify Content - Flexbox tutorial', '5. Positioning items - Flexbox tutorial', '6. The flex property - Flexbox tutorial', '7. Align items - Flexbox tutorial', '8. Flex direction column - Flexbox tutorial', '9. Wrapping - Flexbox tutorial', '10. Flex grow, shrink, basis - Flexbox tutorial', '11. Order - Flexbox tutorial', '12. Bonus: Responsive Navbar - Flexbox tutorial', '13. Bonus: Creating a Flexbox image grid - Flexbox tutorial', '14. Congrats & next steps!']}","['Flexbox Basics', 'Main axis', 'Cross axis', 'Justify content', 'Positioning items', 'The flex property', 'Align items', 'Flex direction', 'Wrapping', 'Flex grow, shrink, basis', 'Order', 'Creating Navbar', 'Creating image grid']",[],"['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed.']","Front-end developer and co-founder of Scrimba. Per loves helping other people learn new skills so that they can improve their lives. He makes his tutorials as simple as humanly possible, and focus on getting the students to the point where they can start building projects on their own.","[""Once you've learned CSS Flexbox, you'll wonder how you ever managed to build websites without it. It gives you all the tools you needed in order to properly arrange content inside flexible containers.  "", ' Given that all websites need to be flexible and responsive these days, Flexbox is a must-have skill for web developers. ', ' ', 'Course content', ' ', "" This course is focused on getting you up to speed as quickly as possible. Even if you only watch the first lectures, you'll be able to take advantage of your new skills in your next project.  "", "" I'll give you several exercises throughout the course, so that you'll be able to get your hands dirty as well. We'll use a navbar as an example layout, as that's a very typical use case for Flexbox.  "", "" In the bonus screencasts, we'll tie everything together and build two real-world examples: an awesome image grid and a fully responsive navbar. You can follow the course creator Per Harald Borgen on Twitter "", 'here.', ' ', '  ', 'Join the Scrimba community chat', ' ', ' Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
27,Advanced React,Bob Ziroll,Course level: Advanced,The best learning experience paired with a world-class instructor. This massive course aims to turn you into hireable React developer as fast as possible.,"{'Introduction': ['1. Course Introduction and Overview', '2. Setting the stage with modern JavaScript features', '3. React.Fragment', '4. Default Props', '5. Prop Types', '6. defaultProps and propTypes Practice', '7. Feedback - Intro'], 'Reusability': ['1. Code Reuse in React', '2. React Children', '3. Challenge: React Children', '4. Higher Order Components (HOCs) Part 1', '5. Higher Order Components (HOCs) Part 2', '6. Challenge: Higher Order Components (HOCs) ', '7. Higher Order Components (HOCs) Part 3', '8. Render Props Part 1', '9. Render Props Part 2', '10. Render Props Part 3', '11. IMPORTANT: Please watch before continuing the course', '12. Challenge: Render Props', ""13. React's Tree Rendering 🌳"", '14. Feedback - Reusability'], 'Performance': ['1. What is ""Shallow Comparison""?', '2. shouldComponentUpdate()', '3. React.PureComponent', '4. React.memo()', '5. Feedback - Performance'], 'React Context': ['1. Context Intro', '2. Context Provider', '3. contextType', '4. Challenge: Context Practice 1', '5. Context.Consumer', '6. Challenge: Context Practice 2', '7. Move Context Provider to its own component', '8. Challenge: Changing Context', '9. Challenge: Context Practice 3', '10. Context Conclusion', '11. Feedback - Context'], 'React Hooks': ['1. Hooks Intro', '2. useState() Part 1 - Creating State', '3. useState() Part 2 - Changing State', '4. useState() Part 3 - Changing More Complex State', '5. useEffect() Part 1', '6. useEffect() Part 2', '7. Speed Typing Game Intro', '8. Speed Typing Game Part 1', '9. Speed Typing Game Part 2', '10. Speed Typing Game Part 3', '11. Speed Typing Game Part 4', '12. Speed Typing Game Part 5', '13. Speed Typing Game Part 6', '14. useRef', '15. Speed Typing Game Part 7', '16. useContext()', '17. Hooks Practice - refactor themeContext', '18. Custom Hooks', '19. Custom Hooks practice - refactor toggler', '20. Speed Typing Game Part 8', '21. Feedback - Hooks'], 'React Router': ['1. Intro to React Router', '2. React Router - BrowserRouter', '3. React Router - Link', '4. React Router - Switch & Route', '5. Challenge: React Router', '6. React Router - props passed to routed components', '7. NOTE: watch this before proceeding', '8. React Router Nested Routes', '9. React Router useParams', '10. React Router useRouteMatch', '11. React Router useHistory', '12. React Router useLocation', '13. React Router - Redirect', '14. Challenge: React Router Practice Part 1', '15. Challenge: React Router Practice Part 2', '16. Feedback - Router'], 'Capstone Project': [""1. What we're building"", '2. Update: Please watch before proceeding', '3. React Router Setup', '4. Context Setup', '5. Context State', '6. Fetch Photos', '7. Map Photos', '8. Track Hover State', '9. Display Icons on Hover', '10. Toggle isFavorite', '11. Display Favorites', '12. Image propTypes', '13. Add Image to Cart', '14. Indicate When Image is Already in Cart', '15. Remove From Cart', '16. Update Header Cart Icon', '17. Cart Page Setup', '18. Remove Items from Cart Page', '19. Calculate Total Cost', '20. Place Order', '21. Minor UX Improvements', '22. Custom Hover Hook'], 'Redux': ['1. Redux Intro', '2. Plain JS Redux - Overview', '3. Plain JS Redux - Actions', '4. Plain JS Redux - Action Creators', '5. Plain JS Redux - Reducer', '6. Plain JS Redux Practice 1', '7. Plain JS Redux - Creating the Store', '8. Plain JS Redux - subscribe and getState', '9. Plain JS Redux - dispatch', '10. Plain JS Redux - Payload in action creators', '11. Plain JS Redux - Handling more complex state', '12. Plain JS Redux - Practice', '13. Plain JS Redux - Even more complex state', '14. Plain JS Redux - combineReducers Part 1', '15. Plain JS Redux - combineReducers Part 2', '16. Plain JS Redux Practice 1', '17. Plain JS Redux Practice 2', '18. Redux in React - Setup & Practice', '19. Redux in React - react-redux & Provider', '20. Redux in React - connect()', '21. Redux in React - mapStateToProps', '22. Redux in React - mapDispatchToProps', '23. Redux in React - useSelector()', '24. Redux in React - useDispatch()', '25. Redux in React - Redux Thunk', '26. React Bootcamp Feedback - Redux'], 'Getting hired': ['1. Getting Hired', '2. Getting Hired - Edabit', '3. Getting Hired - CodeSignal', '4. Getting Hired - Pramp', '5. Getting Hired - Problem Solving', '6. Course Conclusion']}","['React Hooks', 'React Router', 'Redux in React', 'Plain JS Redux', 'React Context', 'Render props', 'Job interview strategies', 'Higher order components', 'React Fragment', 'defaultProps & propTypes', 'shouldComponentUpdate()', 'PureComponent', 'React.memo()', 'Children', 'Optimization', 'And a lot more!']","['The PicSome webshop', 'Speed Typing Game']","['Before taking this course, you should have a basic understanding of HTML, CSS, JavaScript, and React. You should be familiar with JavaScript data types, functions, and classes, and some ES6. As for React, you should also be comfortable with JSX, event handlers, and how to use state and props in your components.']","Head of Education at Scrimba. Passionate about learning, creating cool stuff, and helping others achieve their career goals.","['This course will teach you the skills you need in order to become a professional React developer.', '  The curriculum has been carefully created to turn you into a hireable candidate.  ', '  ', 'How do we know what level is ', 'hireable', '?', '  Well, our instructor Bob Ziroll has turned hundreds of students into professional front-end developers as the Head of Education at V School, a top technology bootcamp in Utah.', '   Many of Bob’s students got React jobs, so he knows better than anyone what it takes to turn someone into a hireable React developer. ', '  ', 'Why do people learn faster from this course?', ' ', ""  This course will take full advantage of Scrimba's innovative, interactive code-learning experience."", ""  As soon as you've learned a new concept, you'll jump into the code and solve a challenge to make sure that the knowledge sticks with you. It's almost as if you and instructor Bob Ziroll are pair-programming together! "", ""  This kind of fast-paced interactivity simply isn't possible with any other platform than Scrimba, and it's been praised by our students from day one. "", '   This approach helps you to build the muscle memory you need to become an effective developer. ', '    ', 'Why React?', ' ', ""  By learning React, you'll drastically increase your chances of getting a job as a front-end developer, as the current demand for React developers by far outstrips the supply.\xa0"", ""   Enroll now if you're ready to give your career a boost! "", '   This course is also a part of our hugely popular Front-End Developer Career Path, which aims to teach you everything you need to know to land a role as a Junior Frontend Developer. Why not check that out, too?']"
28,Learn Styled Components in React,Ania Kubow,Course level: Intermediate,"Learn how to use the Styled Components package in React by building a fun, hands-on project with software developer and YouTuber Ania Kubow.","{'Learn Styled Components in React': ['1. Introduction to Styled Components', '2. Why use them?', '3. Setup and Syntax', '4. Setting up from scratch - Project work', '5. Styling through Props', '6. Separating Components and passing props - Project work', '7. Extending Styles', '8. Extended Styles in real life examples - Project work', '9. Polymorphic Prop', '10. Passing props', '11. Passing props in real life examples - Project work', '12. If else statements in styling', '13. If else statements in styled Components - Project work', '14. Nesting', '15. Animations', '16. Rendering our Progress Tracker based on todays Date - Project', '17. Update your own Progress - Project', '18. Outro']}","['Why to use styled components', 'Setup & syntax', 'Styling through props', 'Separating components', 'Extending styles', 'Polymorphic props', 'Passing props', 'Statement-based styling', 'If-else statements in styled components', 'Nesting', 'Animations', 'How to build a progress tracker']",[],"[""Before taking this course, you should have a basic understanding of HTML, CSS, and JavaScript. If you're not there yet, check out these free courses:""]",Hi My Name is Ania and I am a software Developer and YouTuber. I like to make all sorts of tutorials mainly around JavaScript Games. I also like to teach React.js and a little bit of mobile development in React-native. ,"['The Styled Components package is the result of wondering how to enhance your CSS for styling React component systems. So if you’re looking for a great way to style your React projects, look no further!', '    ', 'Why use styled components?', '    Styled components are helpful for many reasons. They reduce class name bugs, they make your components more readable, and they allow you to navigate your CSS more easily. They also allow for dynamic styling and automatic vendor prefixing.', '   ', 'What is the structure of this course?', ""   This one-hour course follows a “lesson and project” approach. You’ll learn the core concepts and complete mini-challenges to test your understanding. Then you'll put your new skills to good use with a fun and practical project."", ""   By the end of the course, you'll have a cool progress tracker to add to your portfolio or even expand upon to show off your coding skills.  "", 'Will I need to do any setup?', ' ', ""Thanks to Scrimba’s handy interface, there is hardly any setup required for this course. You're ready to begin learning straight away, so let’s get started!""]"
29,Introduction to unit testing,Dylan C. Israel,Course level: Intermediate,Code with confidence and lower your stress levels by learning how to test your code as you write it.,"{'Introduction to unit testing': ['1. Introduction', '2. Introduction to Jasmine', '3. Frontend Career Path', '4. Setting Up Jasmine from Scratch', '5. Understanding the 3 parts of testing', '6. Testing Setup Breakdown ', '7. Grouping with describe', '8. Grouping with describe (Challenge)', '9. Our first test', '10. Our first test (Challenge)', '11. Setting Up Data with beforeEach()', '12. Setting Up Our Data with beforeEach (Challenge)', '13. Skipping and Focusing Introduction', '14. Skipping and Focusing (Challenge)', '15. Unit Testing: Spies 🕵️', '16. Spy Challenge 🕵️', '17. Mocks + Debug with me! \U0001fab2', '18. Mocks Challenge', '19. Additional matchers: toBeDefined() & toEqual()', '20. Additional Matchers Challenge', '21. Final Challenge', '22. Outro']}","['Introduction to Jasmine', 'The 3 parts of testing', 'The testing setup', 'Grouping with describe', 'Setting up data', 'Skipping', 'Focussing', 'Spies', 'Mocks', 'Debugging', 'Additional matchers', 'What next?']",[],"['Before taking this course, you should have a solid understanding of JavaScript.']",I teach tens of thousands of students monthly about web development.,"['Unit testing is in high demand, with good reason!', ' ', 'Testing your code allows you to check that your logic works as expected every time, giving you code confidence, lowering stress levels, and allowing you to deliver faster results. ', 'This course covers test grouping, test cases, debugging tests with focus, spies and more in just one hour, and contains plenty of challenges to cement your new knowledge. ', 'You’ll also learn about the 3 A’s (Arrange, Act, Assert), and, of course, write plenty of tests. ', 'The earlier you start incorporating unit tests into your code base, the better - but it’s never too late. That means that this course is suitable for both newbie coders and those already working in the field who want to level up. ', 'Knowledge of Unit Testing removes coding doubts, leads to faster development, and reduces bugs, so do your future self a favor and learn Unit Testing today. ']"
30,HTML & CSS crash course,Kevin Powell,Course level: Beginner,"Learn to build your very first web pages with this four hour course on HTML and CSS. Created by Kevin Powell, one of the most popular HTML & CSS instructors on the web.","{'HTML & CSS crash course': ['1. Introduction', '2. What are HTML and CSS?', '3. Frontend Career Path', '4. Basic Terminology and Syntax', ""5. Let's write some HTML!"", '6. strong and emphasis', '7. File naming and organization', '8. Anchors and Attributes', '9. Intro to CSS', '10. CSS Basics', '11. Practice time!', '12. Recap up until this point', '13. Lists', '14. Images', '15. Practice time!', '16. Internal CSS', '17. External CSS', '18. Classes and IDs', '19. Comments in HTML and CSS', '20. The only tags you need to know (for now)', '21. Intro to the box model', '22. Margin and Padding', '23. Borders', '24. Box model wrap up', '25. A basic layout', '26. A basic layout - centering an element on the page', '27. Creating columns with flexbox', '28. Creating the layout from scratch - the HTML', '29. Creating the Layout - The CSS', ""30. What's next?"", '31. Congratulations on Completing the HTML & CSS Crash Course ⭐️']}","['What is HTML and CSS?', 'Terminology and syntax', 'HTML tags', 'File naming and project setup', 'Anchors', 'Attributes', 'strong and emphasis', 'CSS basics', 'Classes and Ids', 'Internal & external CSS', 'Borders', 'The box model', 'Margin & padding', 'Lists', 'Images', 'Centering elements', 'Styling your page']","['Center the dinosaur', 'Your first web page']",['This course is designed with beginners in mind.'],"Hi, I'm Kevin. I love to teach people how to make the web and how to make it look good while they're at it. Over 300.000 people follow my tutorials on YouTube.

I learned to make websites on my own. I know how fun and rewarding it is, but I also know that it can be incredibly frustrating. I'm here to help make your journey into web development as easy and as fun as possible. ","[""Are you curious about web development but don't know where to start? Would you like to be able to build your own websites? Have you tried learning HTML and CSS, but found other courses too boring or difficult?"", 'If your answer is YES to any of these questions, then this is the course for you!', 'Why is this course great?', ""This course features a one of YouTube's most popular instructors, Kevin Powell, along with Scrimba's unique and interactive code-learning experience. It's a magical combination that you won't find anywhere else. The lectures are built to "", 'both', "" entertain and teach you, as we believe you learn faster if you aren't bored."", '\xa0', 'Why is it easier to learn here?', ""Unlike normal videos, Scrimba screencasts are interactive. This means that whenever you're confused, you can simply pause the screencasts and interact with the code yourself. This will help you sort out your confusions."", ""You'll also be given interactive challenges along the way, as this is critical for the knowledge to stick with you. Once you've tried solving the the challenge, your instructor Kevin will show you his solution. It's almost as if you're programming together with Kevin!"", 'So what are you waiting for? Claim your free spot today, and start your adventure as a web developer!', 'This course is also a part of our hugely popular ', 'Front-End Devloper Career Path', '.']"
31,Learn UI design fundamentals,Gary Simon,Course level: Intermediate,"This tutorial course will teach you to design user interfaces that both look good and work well. All is done with HTML and CSS, so no clunky design tools needed.","{'Learn UI design fundamentals': ['1. Course Introduction', '2. White Space', '3. Frontend Career Path', '4. Alignment', '5. Design Challenge: 1', '6. Contrast', '7. Scale', '8. Design Challenge: 2', '9. Typography', '10. Color', '11. Design Challenge: 3', '12. Visual Hierarchy', '13. Design Challenge: 4', '14. The Final Challenge', '15. Closing Thoughts', '16. Congratulations on completing UI Design Fundamentals! 🥳']}","['Colors', 'Contrast', 'White space', 'Typography', 'Alignment', 'Visual hierarchy', 'Scale']","['Sales dashboard', 'Email form', 'Color picker']","['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed.']","Gary is one of YouTube's most popular coding teachers, with over 500.000 followers. He has created close to 100 courses, with topics raging from graphic design to advanced frontend development. ","[""This tutorial course will teach you the seven fundamentals that underpin any good user interface.\nThrough lectures and interactive exercises, you'll acquire the skills you need in order\nto build UIs that both look good and work well. Everything will be built in the browser using \nHTML and CSS, and you'll be able to put your new skills to the test many times throughout the course."", ""The teacher is the well-known Gary Simon. He is one of the most popular design and coding techers on YouTube, \nwith over 600.000 people following his channel DesignCourse. Gary has over 20 years of experience as a UI/UX designer and a frontend developer,\nso you can rest assured that you'll be in good hands."", ""The ability to create good user interface designs is a skill any front-end developer will benefit from, whether you're in a team, as a consultant, or want to build your own projects. So what are you waiting for?"", 'Join the Scrimba community chat', 'Learning alone can be lonely. ', 'Click here', ' to join our Discord server and connect with other Scrimba learners!']"
32,Learn React for free,Bob Ziroll,Course level: Intermediate,The ultimate React 101 - the perfect starting point for any React beginner. Learn the basics of modern React by solving 140+ interactive coding challenges and building eight fun projects.,"{'Build a React info site': ['1. Welcome to an Introduction to React!', ""2. What we'll learn"", '3. First React', '4. First React Practice', '5. Local setup (the quick way)', ""6. Why React? It's Composable!"", ""7. Why React? It's declarative"", '8. JSX', '9. Goodbye, CDNs!', '10. UPDATE: New React 18 createRoot API', '11. Thought experiment: use .append() instead of ReactDOM.render()?', '12. Project part 1 - markup', '13. Pop quiz!', '14. Custom Components', '15. Custom Components part 2', '16. Custom Components Quiz', '17. Parent/Child Components', '18. Styling with Classes', '19. Organize components', '20. Run React locally with Vite', '21. Quick mental outline of project', '22. Project setup', '23. Quick Figma Walkthrough', '24. Navbar & Styling', '25. Main Section', '26. Color the bullets', '27. Add background logo', '28. React Section 1 Solo Project', '29. Get a code review!', '30. React Section 1 Recap'], 'Build an AirBnb Experiences clone': ['1. Section intro & Figma file', '2. Project setup: Navbar', '3. Project setup: Hero', '4. Project: Card Component', '5. Problem - not reusable', '6. Props Part 1: Understanding the Concept', '7. Props Part 2: Reusable Components', '8. Aside: JS inside JSX', '9. Props part 3: Create a contact component', '10. Props part 4: receiving props in a component', '11. Prop quiz! (Get it?? 😆)', '12. Destructuring props', '13. Props practice', '14. Passing in non-string props', '15. Project: pass props to card component', '16. Review - array .map()', '17. React renders arrays', '18. Mapping components', '19. Map quiz!', '20. Loading images from .map()', '21. Project: Map experiences data into components', '22. Project: key prop', '23. Project: Sold Out Badge', '24. Project: Pass object as props', '25. Project: Spread object as props', '26. React Section 2 Solo Project', '27. React Section 2 Recap'], 'Build a meme generator': ['1. Section Intro & Figma file', '2. Meme Generator: Header', '3. Meme Generator: Form', '4. Project analysis', '5. Event Listeners', '6. Project: Get random meme', '7. Our current conundrum', '8. Props vs. State: Props', '9. Props vs. State: State', '10. Props vs. State Quiz!', '11. useState', '12. useState array destructuring', '13. Changing state', '14. useState - Counter practice', '15. useState - Changing state with a callback function', '16. Changing state quiz!', '17. Project: Add images to the meme generator', '18. Challenge: ternary practice', '19. Challenge: flipping state back and forth', '20. Complex state: arrays', '21. Complex state: objects', '22. Complex state: updating state objects', '23. Project: Refactor state', '24. Passing state as props', '25. Setting state from child components', '26. Passing data around', '27. Boxes challenge part 1', '28. Dynamic styles', '29. Boxes challenge part 2', '30. Boxes challenge part 3.1 - local state', '31. Boxes challenge part 3.2 - unified state', '32. Boxes challenge part 4', '33. Boxes challenge part 5', '34. Conditional rendering: &&', '35. Conditional rendering: && practice', '36. Conditional rendering: ternary', '37. Conditional rendering practice', '38. Conditional rendering quiz!', '39. React forms intro', '40. Watch for input changes in React', '41. Form inputs practice', '42. Forms state object', '43. Form state object practice', '44. Controlled inputs', '45. Forms in React: Textarea', '46. Forms in React: Checkbox', '47. Forms in React: Radio buttons', '48. Forms in React: Select & Option', '49. Forms in React: Submitting the form', '50. Forms quiz!', '51. Sign up form practice', '52. Project: Add text to image', '53. Making API calls', '54. Intro to useEffect', '55. useEffect() syntax and default behavior', '56. useEffect dependencies array', '57. useEffect quiz!', '58. useEffect for fetching data', '59. useEffect: when to use dependencies', '60. Project: Get Memes from API', '61. State and Effect practices', '62. useEffect cleanup function', '63. Using an async function inside useEffect (Clone)', '64. React Section 3 Recap'], 'Build a notes app and Tenzies game': ['1. Section 4 Intro', '2. Warm-up: Add Dark/Light modes to ReactFacts site', '3. Notes App: Intro', '4. Notes App: Features to add', '5. Notes App: Sync notes with localStorage', '6. Lazy State Initialization', '7. Notes App: Note summary title', '8. Notes App: Bump recent note to the top', '9. Notes App: Delete note', '10. Tenzies Project Intro', '11. Tenzies: Setup', '12. Tenzies: Die components', '13. Tenzies: Generate array of 10 random numbers', '14. Tenzies: Map array to Die components', '15. Tenzies: Roll dice button', '16. Tenzies: Change dice to objects', '17. Tenzies: Styling held dice', '18. Tenzies: Hold dice part 1', '19. Tenzies: Hold dice part 2', '20. Tenzies: Hold dice part 3', '21. Tenzies: End game part 1', '22. Tenzies: End game part 2', '23. Tenzies: End game part 3', '24. Tenzies: New Game', '25. Tenzies: Extra Credit Ideas', '26. React Section 4 Solo Project', '27. Check out the class components crash course!', '28. Congratulations on completing Learn React! 🤩']}","['Local setup', 'Why React?', 'JSX', 'ReactDOM.render()', 'Custom components', 'Organizing components', 'Reusable components', 'JS inside JSX', 'Props', 'Destructuring props', 'Rendering arrays', 'Mapping components', 'Key prop', 'Passing objects as props', 'Spreading objects as props', 'Props vs state', 'useState', 'useState array destructuring', 'Changing state', 'Complex state', 'Refactoring state', 'Passing state as props', 'Local state', 'Unified state', 'Conditional rendering', 'React forms', 'Forms input', 'Forms state object', 'Submitting forms in React', 'Making API calls', 'useEffect', 'Async functions inside useEffect', 'Local storage with React', 'Lazy state initialization']","['React facts site', 'Solo project: Digital business card', 'AirBnB Experiences clone', 'Solo project: Travel journal', 'Meme generator', 'Notes app', 'Tenzies game', 'Solo Project: Quizzical']","[""Before taking this course, you should have a basic understanding of HTML, CSS, and JavaScript. Below are our suggested resource to get you up to speed. You do not need to have taken Bob's original React course.""]","Head of Education at Scrimba. Passionate about learning, creating cool stuff, and helping others achieve their career goals.","[""NOTE: This course is an updated version of our Learn React course. If you're looking for the old version, please "", 'click here.', ""  In this 143-part interactive tutorial, you'll learn how to build dynamic, interactive web applications with React.js.   With Scrimba’s head of education, "", 'Bob Ziroll', ' as a guide, you’ll get to know all the bang-up-to-date features of React, and fix them firmly in your memory by using them to create hands-on projects.    ', 'React', "" is a free and open-source front-end JavaScript library. It was created by the developers at Facebook for use in their own products, including Facebook, Instagram, and WhatsApp . React is also used by Netflix, The New York Times, AirBnb, Discord, DropBox, and many other big companies. In short,  it is one of the most popular JavaScript libraries in the world.   This course is filled with coding challenges that you'll complete by writing React code directly inside the Scrimba screencasts. Before you know it, you'll have written eight interactive React applications!     You’ll be in fantastic company: over 100,000 students enrolled in Bob’s original React course. Many of them have "", 'taken to Twitter', "" to tell the world how helpful they found it.    Learn React for Free is designed to help you learn to code in a way that sticks - no more tutorial Hell.    We achieve this by stuffing the course full to the brim of interactive challenges, allowing you to develop the muscle memory you need to become a truly effective React developer.    You’ll also benefit from spaced learning and repetition in this course. Make sure you give yourself time (days/weeks) to finish it, and include lots of breaks. Don't try cramming it all in at once.      Don’t forget: learning should never be lonely - that’s why we’ve set up the "", 'Scrimba Discord server', '.  Make sure you drop in, say hello, and share your goals and achievements. If you get stuck, there is even a dedicated ', 'React help channel', '.   Once you are done, you will feel\xa0confident in your React skills and be ready to continue your coding journey.    ', 'Advanced React bootcamp', '   Bob has also created a follow-up course that tackles more advanced React topics. ', 'Click here to check it out!', '    This course is also a part of our hugely popular ', 'Front-End Developer Career Path', '.']"
33,Learn JavaScript for free,Per Harald Borgen,Course level: Beginner,Learn the basics of JavaScript by solving 140+ interactive coding challenges and building three fun projects.,"{'Build a passenger counter app': ['1. Welcome to the course!', ""2. Let's build a passenger counter app!"", '3. Setting up our JavaScript file', '4. Write your first JavaScript variable', '5. Basic mathematical operations', '6. Frontend Career Path', '7. Reassigning and incrementing', '8. Adding a button', '9. The onclick event listener', '10. Using functions to write less code', '11. Write your first function', '12. Write a function that logs the sum', '13. Write a function that increments', '14. Increment on clicks', '15. Display the count', '16. The Document Object Model', '17. Display the count with innerText', '18. Create the save button', '19. What is a string?', '20. Write your first string variable', '21. Log a greeting to the console', '22. Strings vs. Numbers', '23. Render a welcome message', '24. Improve the message with string concatenation', '25. Use plus equal for count', '26. Create the save feature', '27. Debugging online', '28. Set the count to 0', '29. Congrats & recap'], 'Practice time - part 1': ['1. Variables practice', '2. Concatenate two strings in a function', '3. Incrementing and decrementing', '4. Strings and numbers', '5. Rendering an error message', '6. Calculator challenge', '7. Figma tutorial ', '8. Solo Project - Basketball Scoreboard', '9. Get a code review!'], 'Build a Blackjack game': [""1. Let's build a Blackjack game!"", '2. Add the firstCard, secondCard, and sum', '3. If...else conditionals', '4. Your first if...else statement', '5. if/else...if/else statement', '6. The if...else statement for our game', '7. Add the hasBlackJack variable', '8. Add the isAlive variable', ""9. Let's practice boolean conditions"", '10. Add the message variable', '11. Link to stylesheet', '12. Add basic styling', '13. Make the start button work', '14. Display the message', '15. Display the sum', '16. Display the cards', '17. New card button', '18. Add to the sum when newCard is clicked', '19. Rename the startGame function', '20. Solving our cards problem with an array', '21. Intro to arrays', '22. Array indexes', '23. Arrays with multiple data types', '24. Adding and removing items from arrays', '25. Creating the cards array', '26. Push a new card to the array', '27. Counting in JavaScript', '28. Write your first loop', '29. For loops and arrays', '30. Write your first array-based for loop', '31. For loops, arrays, and DOM', '32. Use a loop to render cards', '33. How can we avoid to hard-code card values?', '34. Returning values in functions', '35. Use a function to set the card values', '36. Generating random numbers with Math.random()', '37. Math.random() * 6', '38. Flooring the number with Math.floor()', '39. Using Math.random() and Math.floor() to create a dice', '40. Completing our dice function', '41. Make getRandomCard() work', '42. Complete getRandomNumber function', '43. Assign values in the startGame function', '44. Our new card feature is broken', '45. The logical AND operator', '46. Write your first logical operator', '47. The logical OR operator', ""48. Only trigger newCard() if you're allowed to"", '49. Object sneak peek', '50. Intro to objects', '51. Create your first object', '52. Use an object to store player data', '53. Methods on object', '54. Congrats & recap'], 'Practice time - part 2': ['1. Objects and functions', '2. if else', '3. Loops and arrays', '4. push, pop, unshift, shift challenge', '5. Logical operators', '6. Rock papers scissors', '7. EmojiFighter', '8. Sorting fruits', '9. Solo Project - Password Generator'], 'Build a Chrome Extension': [""1. Let's build a Chrome Extension!"", '2. Add button and input tag', '3. Style the button and input tag', '4. Make the input button work with onclick', '5. Refactor to addEventListener', '6. Write your first addEventListener()', '7. Your turn to refactor', '8. Create the myLeads array and inputEl', '9. When to use let and const', '10. Push to the myLeads array', '11. Push the value from the input field', '12. Use a for loop to log out leads', '13. Create the unordered list', '14. Render the leads in the unordered list', '15. How to render <li> elements with innerHTML', '16. Write your first innerHTML', '17. More innerHTML practice', '18. Render the <li> elements with innerHTML', '19. Use createElement() and append() instead of innerHTML', '20. Improving the performance of our app', '21. Create the render function ', '22. Clear the input field', '23. Add the <a> tag', '24. Template strings', '25. Write your first template string', '26. Make the template string even more dynamic', '27. Template strings on multiple lines', '28. Refactor the app to use a template string', '29. Style the list', '30. Preparing the deployment', '31. Deploying the Chrome Extension', '32. What is localStorage?', '33. Your first localStorage', '34. Storing arrays in localStorage', '35. Save the leads to localStorage', '36. Get the leads from localStorage', '37. Truthy and falsy values', '38. Guess the expression - truthy or falsy?', '39. Checking localStorage before rendering', '40. Style the delete button', '41. Make the delete button work', '42. How function parameters can improve our code', '43. Write your first function parameter', '44. Functions with multiple parameters', '45. Numbers as function parameters', '46. Arguments vs Parameters', '47. Arrays as parameters', '48. Refactor renderLeads() to use a parameter', '49. Create the tabBtn', '50. Save the tab url', '51. How to get the current tab?', '52. Use the Chrome API to get the tab', '53. Deploy the final version', '54. Congrats & recap'], 'Practice time - part 3': ['1. let & const', '2. Log out items in an array', '3. save to localStorage', '4. addEventListener and object in array', '5. Generate sentence', '6. Render images', '7. Rounding numbers', '8. Convert string to number challenge', '9. Solo Project - Unit converter', '10. Congrats on completing the Learn JavaScript course!']}","['const & let', 'strings', 'numbers', 'booleans', 'objects', 'arrays', 'functions', 'methods', 'for loops', 'logical operators', 'mathematical operators', 'JSON', 'Math object', 'DOM manpulation', 'getElementById()', 'querySelector()', 'addEventListener()', 'innerText', 'textContent', 'innerHTML', 'conditional statements', 'truthy vs falsy values', 'template strings', 'localStorage', 'debugging with Google']","['Subway Passenger Counter', 'Blackjack Casino Game', 'Chrome Extension']","['Before taking this course, you should have a basic understanding of HTML and CSS. Here’s our suggested resource to get you up to speed.']","Front-end developer and co-founder of Scrimba. Per loves helping other people learn new skills so that they can improve their lives. He makes his tutorials as simple as humanly possible, and focus on getting the students to the point where they can start building projects on their own.","['Let me ask you a few questions: ', '\n', 'Do you think JavaScript is ', 'difficult', ' to learn? ', '\n', 'Do you struggle to transition from ', 'watching', ' JS tutorials to ', 'building', ' JS projects? ', '\n', 'Does regular coding courses sometimes ', 'bore', ' you to death?  ', '\n', '\n', 'If you answer YES to any of the above questions, then this is the course for ', 'you', '.  ', 'Why is this course special?', '  ', 'This is perhaps ', 'the most interactive', ' JavaScript course ever recorded. It contains 140+ coding challenges, meaning that you will finally build that ', 'ever-so-important', ' JavaScript muscle memory. ', 'So say goodbye to ', '""tutorial hell""', ' and get ready to start feeling your JavaScript superpowers grow ', 'exponentially.', '  ', 'Another unique thing with this course is that you will build projects from the ', 'very start', '. Instead of long and boring theoretical lessons, you will dive head-first into building products and solving challenges.  ', 'This is ', 'learning by doing', ' on ', 'steroids', '. ', 'What will I build?', ' You will start out simple with a ', 'Passenger Counter', ' app. This will teach you the very basics of JavaScript and the DOM.   ', 'Moving on, you will build your very first game, namely ', 'Blackjack', ', the iconic Casino game. Who knows, perhaps this little app marks the start of your career as a game developer?  ', 'Finally, you will build your very own ', 'Chrome Extension', '. This is exciting, as you will deploy this extension to your Chrome browser, so that you get to experience it out in the wild.  ', 'Between each of the project sections, I will stress-test your skills with practice sections. This way, you can be sure that the concepts really ', 'stick with you.', '   ', 'Once you are done, you will feel ', 'confident', ' in your JavaScript skills and be ready to move into libraries like React or Vue, or continue down your JavaScript journey.']"
34,Learn Python for free,Olof Paulson,Course level: Beginner,This 58-part tutorial will teach you Python through a mix between tutorials and interactive coding challenges. ,"{'Learn Python for free': ['1. Course Introduction', '2. Running Python on Scrimba with Brython', '3. Frontend Career Path', '4. Print Statement and Programflow', '5. Variables', '6. Datatypes & Typecasting', '7. Variables & Datatypes - Exercise', '8. Arithmetic operations', '9. Strings -Basics / Slicing', '10. Exercise- Strings - Basics / Slicing', '11. Strings-2 Find/replace, string formatting', '12. User Input', '13. User Input - Exercise', '14. Lists- Basics', '15. Lists- continued', '16. Lists - Exercise', '17. Split and Join', '18. Split and Join - Exercise', '19. Tuples', '20. Sets', '21. Sets-Exercises', '22. Comments', '23. Functions - Calling ,parameters, arguments, defaults', '24. Functions - Exercise', '25. Functions - Named Notation', '26. Return statements', '27. Comparisons and Booleans', '28. Conditionals: If , Else, Elif', '29. If/Elif /Else - Exercise', '30. Conditionals - Exercise improve', '31. While Loops', '32. While Loops - Exercise', '33. For Loops and nesting', '34. For loops - Exercise', '35. Enumerate This!', '36. Sort() and Sorted()', '37. Dictionaries', '38. Dictionaries II', '39. Dictionaries Exercise v 1.0', '40. Dictionaries Exercise v 1.2, 1.5', '41. Filehandling - Reading Files', '42. Exceptions: Try/Except, Raise', '43. Classes and Objects', '44. Inheritance', '45. Modules', '46. Zip / Unzip', '47. Lambda Functions part 1', '48. Lambda Functions Part 2', '49. Lambda Functions - Exercise', '50. Comprehensions - Lists', '51. Comprehensions - Dictionary', '52. Randomness', '53. Timeit and performance', '54. Project - Crypto machine', '55. Project - Math Tutor ', '56. Project - Marble/Trading game', '57. Course Summary', '58. Bonus: Project Euler Q4 - Palindromes', '59. Bonus: Project Euler Q4 - Palindromes 2', '60. Congratulations on Completing Learn Python for Free!  🐍']}","['Basic syntax', 'Strings, Variables', 'Arithmetic operations', 'Lists, Tuples and Sets', 'Conditionals : if , elif', 'Loops: While, for', 'Functions / Return Statements', 'Sorting: difference  sort() / sorted()', ""Zip/ 'Un-zip'"", 'Unpacking', 'Comments', 'modules', 'Classes / Objects', 'Dictionaries', 'Exceptions: Try /Except', 'Inheritance', 'Module: random', 'lambda functions', 'list comprehension']",[],['This course is designed with beginners in mind.'],"Olof Paulson is advocate for Khan Academy Swedish. He has a passion for using technology to give people access to high-quality STEM education. Olof’s Background is in finance and portfolio management, building and managing algorithmic trading models and developing enterprise trading systems for institutions.  ","['The course consists of 4-8 minute tutorials covering a topic, and separate exercises where the topic is covered as a hands-on coding challenge. It aims to give you a solid understanding of the basic concepts in Python programming. ', 'As with all Scrimba courses, you can stop, test, modify or spin-off the code at any time. This makes for a more immersive experience and is one of the greatest benefits with the Scrimba platform. ', ""BUT! It only works if you do, so use the opportunity. Don't just watch the talkthroughs, work through them, play, experiment, fail and learn! That is how you become great. You got this!"", 'Extend the learning:', 'To discuss learning Python in this course, share and meet others in a similar situation to yourself you are invited to join the ', 'Facebook group: Python 101', ' started for this purpose. The instructor Olof Paulson will be active and answer your questions.']"
35,Learn Typescript for free,Ania Kubow,Course level: Intermediate,A hands-on course giving you the basics of TypeScript while you build a real-world-style couchsurfing app.,"{'Learn primitive types': ['1. Introduction to TypeScript', '2. Course Outline', '3. Couch Surfing Website', '4. What is TypeScript?', '5. Frontend Career Path', '6. Types in JavaScript', '7. Using typeof (mini-challenge)', '8. Viewing TypeScript Prompts', '9. TypeScript Types', '10. Assigning Types', '11. Benefits of using Typescript', '12. Number Types mini-challenge', '13. Strings Types mini-challenge', '14. Boolean Types mini-challenge', '15. Fixing the Website mini-challenge', '16. Type Assignment and Type Inference'], 'Learn structural types': ['1. Object Types', '2. Array Types', '3. Array Types mini-challenge', '4. Creating our Property Object', '5. Property Challenge', '6. Adding Properties Results', '7. Add the Properties to our Dashboard Challenge', '8. Tuple Types', '9. Tuple Types Challenge', '10. Enum Types', '11. Enum Types mini-challenge', '12. Any Type', '13. Union Types', '14. Union Types challenge', '15. Literal Types', '16. Function Types + Void Types', '17. Function Types + Void Types mini-challenge'], 'More advanced TypeScript features': ['1. File Organisation', '2. Function Type Challenge', '3. Interfaces', '4. Modules', '5. Classes', '6. Interface and Class Exercise', '7. Add a new Property'], 'Styling and finishing our app': ['1. Styling', '2. Style hover button', '3. Style hover button exercise', '4. Website structure', '5. Color consistency', '6. Moving interfaces', '7. File structure exercise', '8. Compiling', '9. Where to go next?']}","['The benefits of TypeScript', 'Types', 'Typeof', 'String types', 'Boolean types', 'Object types', 'Array types', 'Tuple types', 'Enum types', 'Any types', 'Union types', 'Literal types', 'Function Types', 'Void Types', 'Interfaces', 'Modules', 'Classes', 'Compiling']",['Couch-surfing website'],"['Before taking this course, you should have a basic understanding of HTML, CSS, and JavaScript. Here’s our suggested resource to get you up to speed.']",Hi My Name is Ania and I am a software Developer and YouTuber. I like to make all sorts of tutorials mainly around JavaScript Games. I also like to teach React.js and a little bit of mobile development in React-native. ,"['Do you have a handle on HTML, CSS and JavaScript, and are  you wondering ', 'where to go next?', ' Do you notice plenty of job ads mentioning ', 'TypeScript', "" and wonder what they're about? Do you want to learn a programming language that is "", 'easy to read and debug', '?   ', ' If you answer YES to any of the above questions, then this is the course for ', 'you', '.   ', ' ', 'What will this course do for me?', "" Learn TypeScript breaks down everything you need to get started using TypeScript into approachable chunks, to be consumed at your own pace and convenience. Throughout four sections, we'll cover "", 'primitive data types', ', ', 'structural data types', ', ', 'file organization', ', ', 'modules', ', ', 'classes', ', ', 'compiling', ', and more!  ', "" Even better,  you'll be in build mode from the "", 'very beginning', '. Instead of long, theoretical lessons, you are launched straight into solving challenges and building a real-world style app.   ', ' This course is ', 'learning by doing', ', all the way! This practical approach ensures that your new knowledge ', 'sticks with you', ', and gives you the muscle memory you need to become an ', 'effective TypeScript developer', '.   ', ' ', 'What will I build?', ""  By the end of this course, you'll have built a fun, real-world-style couchsurfing site with loads of cool features like an expandable review section, a personalized welcome message, and a weather display in the footer. "", "" Best of all, there's plenty of scope to expand or customize your project, so your TypeScript learning journey doesn't have to end when the course does! "", ' ', 'Is there any support during the course?', ""   While we can't offer one-to-one support (yet!), our "", 'friendly Discord community', ' is waiting to welcome your questions, share ideas with you, or just chat on a coffee break. We even have a ', 'dedicated TypeScript help channel', '! ']"
36,From Figma to code,Gary Simon,Course level: Intermediate,Practice making high-quality mockups a reality in the browser with five stunning projects created by a UI expert and coded by you.,"{'Welcome & First Project - Simple Card': ['1. Welcome & Course Introduction', '2. Using Figma', '3. Saving the Figma Prototypes Locally', '4. ems and rems', '5. Simple Card - Challenge Intro', '6. Simple Card - HTML', '7. Simple Card - CSS', '8. Simple Card - Finishing Up'], 'Simple Landing Page': ['1. Challenge Intro', '2. CSS: Initial Styles', '3. CSS: Finishing Mobile Styles', '4. CSS: Desktop Styles', '5. A Note About Accessibility'], 'Data Analytics Dashboard': ['1. Data Analytics Dashboard - Challenge Intro', '2. HTML for our dashboard', '3. CSS: Initial Styles', '4.  CSS: typography, buttons and more', '5. CSS: Styling the nav bar', '6. JS: Adding functionality to the nav bar', '7. CSS: Desktop Styles'], 'Car Sales Site': ['1. Car Sales Site - Challenge Intro ', '2. Initial HTML', '3. Finishing the HTML ', '4. CSS: Initial Mobile Styles', '5. CSS: Finishing Up the Mobile Styles', '6. CSS: Styling the Dropdown Menu', '7. CSS/JS: Wiring Up the Options Panel', '8. Adding the Like Functionality', '9. CSS: Desktop Styles'], 'Drone Event Landing Page': ['1. Drone Page - Challenge Intro', '2. Initial HTML', '3. Continuing the HTML', '4. Finishing up the HTML', '5. Starting the CSS', '6. CSS: Hero Section', '7. CSS: Animating the Drone', '8. CSS: Mobile Navigation', '9. CSS: Styling the Quote Section', '10. Styling the Photo Gallery', '11. Finishing the Mobile CSS', '12. CSS:  Starting the Responsive CSS', '13. CSS: Desktop Navigation Styling', '14. Finishing the Project', '15. Congratulations & Closing Thoughts']}","['Viewing Figma designs', 'Using ems and rems', 'Structuring HTML', 'Flexbox', 'CSS Grid', 'Responsive development', 'Animated navigations', 'Mobile-first development', 'Using SVGs', 'Media queries', 'Forms', 'Advanced backgrounds', 'Burger menus', 'Logos', 'Icons', 'Dropdowns', 'Like functionality', 'Complex grid layouts']","['A Simple Card', 'A Simple Landing Page', 'A Data Analytics Page', 'A Car Sales Site', 'A Drone Event Page', 'A Drone Event Page']","['Before taking this course, you should have a good grasp of HTML, CSS & JavaScript. Here are our suggested courses to get you up to speed:']","Gary is one of YouTube's most popular coding teachers, with over 500.000 followers. He has created close to 100 courses, with topics raging from graphic design to advanced frontend development. ","['From Figma to code', ' is the perfect course for aspiring frontend developers who love a challenge and want to learn how to transform great-looking mockups into usable user interfaces. ', '  During the course, you’ll test your HTML, CSS and JavaScript skills by building out five beautiful designs ranging from a simple card, a landing page, an analytics dashboard, a sales website and finally an animated event site', '  This course aims to give you as much independent practice as possible. You’ll have access to detailed designs in Figma, which you’ll craft into user interfaces which look fantastic on a variety of screen sizes.', '  After you’ve built each project, UI expert and renowned web development educator Gary Simon will guide you through the code he would use to bring the mockup to life so you can compare it with your solution and hopefully pick up plenty of new tips and tricks. ', '  ', 'A few more details on the designs you’ll bring to life throughout this course: ', '  ', 'A Simple Card', ' ', ' The first challenge introduces you to Figma and recaps em and rem units before letting you loose with creating those near pixel-perfect elements. Topics covered include CSS grid, SVGs as links, and media queries.  ', '  ', 'A Simple Landing Page', ' ', '  This challenge introduces a range of topics including creating a hero image, forms and buttons, leaving you with a slick landing page that you can adapt for your own projects. ', '  ', 'A Data Analytics Dashboard', '  ', '  In the project, we tackle elements such as animated nav bars,    burger menus, more advanced backgrounds, gradients and logos, allowing you to practice making a sleek, modern site.  ', '  ', 'A Car Sales Site', '  ', '  This massive project allows you to practice creating a sales site, including a search bar, like functionality, icons, and an animated dropdown.', '   ', 'Drone Event Landing Page', ' ', ' This mind-blowing project lets you show off everything you’ve learned so far, plus pick up some awesome skills you might not already know. As well as creating pro-looking animated elements, styling quotes, and advanced CSS grid practice, we’ll also create another stylish form and animated nav bar, to cement your knowledge from earlier in the course. ', '  ', 'Get help and feedback', '  If you need help or would like feedback on your creations along the way, you can visit our dedicated ', 'Design Help', ' Discord channel. Looking forward to seeing you there! ']"
37,Learn class components in React,Bob Ziroll,Course level: Intermediate,A one-hour course to get you up to speed with class components in React,"{'Learn class components in React': ['1. Class Components Section Intro', '2. ES6 classes review', '3. Intro to class components', '4. Class components practice', '5. Frontend Career Path', '6. State in class components', '7. Setting state in class components', '8. Challenge: convert to a class component with state', '9. Constructor method in class components', '10. Challenge: constructor method', '11. Updating complex state with this.setState()', '12. Lifecycle Methods Intro', '13. Lifecycle methods: componentDidMount() 👶', '14. Lifecycle methods: componentDidUpdate() part 1 ✏️', '15. Lifecycle methods: componentDidUpdate() part 2 ✏️', '16. Lifecycle methods: componentWillUnmount() \U0001faa6', '17. Other Lifecycle Methods']}","['ES6 classes review', 'State in class components', 'State', 'Setting state', 'Converting to a class component', 'The constructor method', 'updating complex state', 'componentdidMount()', 'componentdidUpdate', 'componentWillUnmount', 'Lifecycle methods', 'this.setState()', 'Class components Challenges 🚀']",[],"['Before taking this course, you should have a basic understanding of HTML, CSS, JavaScript and React. Here’s our suggested resource to get you up to speed.']","Head of Education at Scrimba. Passionate about learning, creating cool stuff, and helping others achieve their career goals.","['Bob Ziroll is back with a one-hour whistle-stop tour of class components in React.  ', ' Why learn class components? ', ' Although modern React tends to use functional components, knowledge of class components remains a useful skill to have in your toolbox. You might find yourself dealing with legacy code, or a colleague who prefers them. The difference between functional and class components might come up in an interview - who knows!  ', ' In this free, one-hour course, Scrimba Head of Education takes you through the essential basics of class components with a collection of interactive challenges designed to get you coding as much as possible. This approach leaves you with rock-solid knowledge which really sticks.  ', ' In the course, we’ll look at what class components are, state in classes components, the constructor method in class components, updating complex state, lifecycle methods, and more!  ']"
38,Scrimba Challenge Weeks,Leanne from Scrimba,Course level: Intermediate,"Flex (and improve!) your coding skills, have fun, and be in with a chance of winning awesome prizes!",,,,,"Apart from Scrimba, my main interests are coffee, code and cats.","['Put simply, a challenge week is your chance to flex (and improve!) your coding skills, have fun, and be in with a chance of winning some ', 'awesome prizes', '! ', ""\nWe'll release a brand new challenge "", 'every day during Challenge Week', ', meaning you have plenty of chances to flex your code skills and hopefully grab a prize!', ' \nYou can do ', 'as many or as few of the challenges as you like', ', but the grand prize winner will be selected from all the valid entries, meaning that ', 'the more challenges you solve, the higher your chances of winning', '! ', '\nYou can also personalise your solutions by adding extra features or changing up the styling. Members of the Scrimba team will choose a daily ', '“Pick of the Day”', ', which will be displayed on this page.', 'How to take part', 'To get involved, simply solve the latest challenge and tweet your solution with the ', '#ScrimbaChallengeWeek', ' hashtag. We’ll announce the daily winners over on Scrimba’s Twitter page and the Grand Prize winner in our live stream on Friday. ', '\n', 'Good luck and happy coding! 🚀']"
39,Learn HTML and CSS,Per Harald Borgen,Course level: Beginner,"This course will teach you HTML and CSS through building and deploying five awesome projects. It is also fully interactive, with over 75 coding challenges. There are no prerequisites, so it is suitable for absolute beginners.","{'Build & deploy your first website': ['1. Welcome to the HTML & CSS course!', '2. HTML tags', '3. Write a news article!', '4. The <img> tag', '5. Nesting', '6. Internet superpowers -> Change the BBC news!', '7. Interactive elements - button', '8. Interactive elements - input tags -> Experiment with input types', ""9. Let's build Google!"", '10. Aside: Anchor tags', '11. Add an anchor tag to Google.com', '12. Proper document structure', '13. Aside: Lists', '14. Build a Personal Website', '15. Deploy your Personal Website', '16. HTML Recap'], 'Build a Google.com clone': [""1. Let's learn CSS!"", '2. Write your first lines of CSS!', '3. Write your first lines of CSS! - Solution', ""4. Let's destroy wikipedia - recording"", '5. Link to the CSS file', '6. Set the width of the elements ', '7. inline vs block elements ', '8. Margin top', '9. Divs rule the world', '10. CSS classes', '11. Aside: Learn margins via flags', '12. Add space between our elements', '13. Aside: centering with margins', '14. Centering our content', '15. Aside: padding', '16. Aside: border and border-radius', '17. Aside challenge: style Twitter button', '18. Fix the input field', '19. Center the button', '20. Style the button', ""21. Why we can't have two block-level buttons"", '22. Aside: flexbox', '23. Centering both buttons with flexbox', '24. Google clone recap'], 'Build a digital Business Card': ['1. Building your digital business card', '2. Fix the image path', '3. Add alt attribute', '4. Make image smaller', '5. Add a border and padding', '6. Aside: flexbox child containers', '7. Flex item containers', '8. Add a utility class', '9. Justify the items', '10. Center the card', '11. Aside: inheritance', '12. Center the text via inheritance', '13. Add colors', '14. Web-safe fonts', '15. Aside: margin/padding shorthand', '16. Use the margin&padding shorthands', '17. Deploy your Digital Business Card', '18. Business Card recap'], 'Build a Space Exploration site': [""1. Let's go to space!"", '2. Add a background image from unsplash', '3. Center elements and style button', '4. Add a Google Font', '5. @font-face', '6. Aside: spans', '7. Add an underline using a span', '8. Use an ID for the logo', '9. Replace the jpg with a webp', '10. Choose a color palette from an image', '11. Add the terms & conditions section', '12. Aside: text shadow', '13. Improving the readability with text shadows', '14. Space Exploration recap'], 'Build a Birthday GIFt Site': [""1. Let's build a Birthday GIFt site!"", '2. Add basic header styling', '3. Set the colors', '4. Add shadow on text', '5. We have a problem that flexbox can fix', '6. Aside: align-items', '7. Aside: flex-direction', '8. Turn the header into a flexbox', '9. Fix date and age design', '10. Create the first gift', '11. Replace the img with a div', '12. Aside: make elements change on hover', '13. Add the hover effect', '14. Create the next GIFt', '15. Create two more GIFts', '16. Create the final GIFt', '17. Add the footer', '18. Add a background gradient', '19. Personalize the Birthday GIFt Site', '20. Use GitHub Desktop to publish your Birthday GIFt Site', '21. Deploying your Birthday GIFt Site', '22. Use VS Code to edit your Birthday GIFt Site', '23. GIFt site recap'], 'Solo Project: Hometown Homepage': [""1. It's time to go solo!"", '2. Solo Project: Hometown Homepage', '3. Get a code review!', '4. Code Review by Guil Hernandez', '5. Congrats on completing the course!']}","['What is HTML and CSS?', 'Text elements', 'Anchor tags', 'Interactive elements', 'Divs and spans', 'Attributes', 'Nesting', 'Lists', 'Images', 'CSS basics', 'Classes and Ids', 'Inline vs block', 'Centering elements', 'Borders', 'The box model', 'Margin & padding', 'Inheritance', 'Basic flexbox', 'Designing your page', 'Text shadows', 'Background images', 'Google Fonts', 'Color palettes', 'Gradients', 'Web dev basics', 'Dev Tools', 'How to Google', 'Using GitHub', 'Deployment', 'Using Figma']","['Google.com Clone', 'Digital Business Card', 'Space Exploration Site', 'Birthday GIFs Site', 'Hometown Homepage']","['This course is designed with absolute beginners in mind, so there are no prerequisites, and you do not need any tools except your browser.']","Front-end developer and co-founder of Scrimba. Per loves helping other people learn new skills so that they can improve their lives. He makes his tutorials as simple as humanly possible, and focus on getting the students to the point where they can start building projects on their own.","['Let me ask you a few questions:\u2028\xa0\n\u2028', '\u2028\u2028- Are you curious about web development ', ""but don't know where to start?"", '\n\u2028', '\u2028\u2028- Do you want to learn how to ', 'build your own', ' websites?\n\u2028', '\u2028\u2028- Have you tried learning HTML & CSS, but found other courses ', 'too boring or difficult?', '\n\u2028', '\u2028If your answer to any of these questions is ', 'YES', ', then this is the course for you!\u2028\u2028\u2028\u2028', ""It takes full advantage of Scrimba's "", 'unique and interactive code-learning tech.', '\u2028\xa0\u2028\u2028', '\u2028So once you have learned a concept, you will be given a coding challenge to ', 'build your muscle memory', '. \u2028\u2028\u2028There is ', 'no setup required', ', as you will do everything in the browser.\u2028\xa0\u2028\u2028', '\u2028\u2028After you have completed the challenge, your instructor Per Harald Borgen (CEO at Scrimba) will show you the solution. ', 'You will feel as if you are pair programming with the teacher! It is a truly ', 'magical experience', "" that you won't find anywhere else. \n\xa0"", 'The lectures are also ', 'fun', ' and ', 'bite-sized', "". We don't allow long and boring blocks of theory in Scrimba courses. So don't worry, you'll enjoy this.\u2028\u2028\u2028"", 'By the end of this course, you will have built and deployed several neat-looking projects that you can ', 'show to potential employers.', '\u2028', ""And if you'd like to continue your learning journey, you can jump directly into Module 3 in our "", 'Front-End Devloper Career Path', '.']"
40,The Frontend Developer Career Path,,,"This career path will turn you into a hireable frontend developer, and teach you how to nail the job interview. It contains over 70 hours of top-notch tutorials, hundreds of coding challenges, and dozens of real-world projects.","{'Getting started': ['1. Why learning web development is a superpower', ""2. Let's Make a Cake!"", '3. Join the community'], 'Your own personalized web app': ['1. Add your Name and Emoji', '2. Display Photos', '3. Change the Background Image', '4. Choose a Color', '5. Set the Font, Border, and Column Count', '6. Share your website', '7. Two ways to do the path'], 'Build & deploy your first website': ['1. Module 2 intro - web dev basics', '2. HTML tags', '3. Write a news article!', '4. The <img> tag', '5. Nesting', '6. Internet superpowers -> Change the BBC news!', '7. Interactive elements - button', '8. Interactive elements - input tags -> Experiment with input types', ""9. Let's build Google!"", '10. Aside: Anchor tags', '11. Add an anchor tag to Google.com', '12. Proper document structure', '13. Aside: Lists', '14. Build a Personal Website', '15. Adding our project to GitHub', '16. Deploying it to the web!', '17. Recap ', '18. Get to know the module channels! 💜'], 'Build a Google.com clone': [""1. Let's learn CSS!"", '2. Write your first lines of CSS!', '3. Write your first lines of CSS! - Solution', ""4. Let's destroy wikipedia - recording"", '5. Link to the CSS file', '6. Set the width of the elements ', '7. inline vs block elements ', '8. Margin top', '9. Divs rule the world', '10. CSS classes', '11. Aside: Learn margins via flags', '12. Add space between our elements', '13. Aside: centering with margins', '14. Centering our content', '15. Aside: padding', '16. Aside: border and border-radius', '17. Aside challenge: style Twitter button', '18. Fix the input field', '19. Center the button', '20. Style the button', ""21. Why we can't have two block-level buttons"", '22. Aside: flexbox', '23. Centering both buttons with flexbox', '24. Google clone recap'], 'Build a digital Business Card': ['1. Building your digital business card', '2. Fix the image path', '3. Add alt attribute', '4. Make image smaller', '5. Add a border and padding', '6. Aside: flexbox child containers', '7. Flex item containers', '8. Add a utility class', '9. Justify the items', '10. Center the card', '11. Aside: inheritance', '12. Center the text via inheritance', '13. Add colors', '14. Web-safe fonts', '15. Aside: margin/padding shorthand', '16. Use the margin&padding shorthands', '17. Make it your own and share it on Discord!', '18. Business Card recap'], 'Build a Space Exploration site': [""1. Let's go to space!"", '2. Add a background image from unsplash', '3. Center elements and style button', '4. Add a Google Font', '5. @font-face', '6. Aside: spans', '7. Add an underline using a span', '8. Use an ID for the logo', '9. Replace the jpg with a webp', '10. Choose a color palette from an image', '11. Add the terms & conditions section', '12. Aside: text shadow', '13. Improving the readability with text shadows', '14. Space Exploration recap'], 'Build a Birthday GIFt Site': [""1. Let's build a Birthday GIFt site!"", '2. Add basic header styling', '3. Set the colors', '4. Add shadow on text', '5. We have a problem that flexbox can fix', '6. Aside: align-items', '7. Aside: flex-direction', '8. Turn the header into a flexbox', '9. Fix date and age design', '10. Create the first gift', '11. Replace the img with a div', '12. Aside: make elements change on hover', '13. Add the hover effect', '14. Create the next GIFt', '15. Create two more GIFts', '16. Create the final GIFt', '17. Add the footer', '18. Add a background gradient', '19. Personalize, deploy and share to Discord', '20. GIFt site recap'], 'Solo Project: Hometown Homepage': [""1. It's time to go solo!"", '2. Solo Project: Hometown Homepage', '3. Get a code review!', '4. Code Review by Guil Hernandez', '5. Congratulations on completing Module 2! 🥳'], 'Build a passenger counter app': ['1. Making Websites Interactive - Module Intro - NEW', '2. Share your plan in #today-i-will!', ""3. Let's build a passenger counter app!"", '4. Setting up our JavaScript file', '5. Write your first JavaScript variable', '6. Basic mathematical operations', '7. Reassigning and incrementing', '8. Adding a button', '9. The onclick event listener', '10. Using functions to write less code', '11. Write your first function', '12. Write a function that logs the sum', '13. Write a function that increments', '14. Increment on clicks', '15. Display the count', '16. The Document Object Model', '17. Display the count with innerText', '18. Create the save button', '19. What is a string?', '20. Write your first string variable', '21. Log a greeting to the console', '22. Strings vs. Numbers', '23. Render a welcome message', '24. Improve the message with string concatenation', '25. Use plus equal for count', '26. Create the save feature', '27. Debugging online', '28. Set the count to 0', '29. Congrats & recap', '30. Share your win!'], 'JavaScript challenges - part 1': ['1. Variables practice', '2. Concatenate two strings in a function', '3. Incrementing and decrementing', '4. Strings and numbers', '5. Rendering an error message', '6. Calculator challenge', '7. Figma tutorial ', '8. Solo Project - Basketball Scoreboard'], 'Set Up a Local Dev Environment': ['1. Section Intro', '2. Getting Started with GitHub Desktop ', '3. Edit with VS Code and Push to GitHub'], 'Build a Blackjack game': [""1. Let's build a Blackjack game!"", '2. Live events on Scrimba', '3. Add the firstCard, secondCard, and sum', '4. If...else conditionals', '5. Your first if...else statement', '6. if/else...if/else statement', '7. The if...else statement for our game', '8. Add the hasBlackJack variable', '9. Add the isAlive variable', ""10. Let's practice boolean conditions"", '11. Add the message variable', '12. Link to stylesheet', '13. Add basic styling', '14. Make the start button work', '15. Display the message', '16. Display the sum', '17. Display the cards', '18. New card button', '19. Add to the sum when newCard is clicked', '20. Rename the startGame function', '21. Solving our cards problem with an array', '22. Intro to arrays', '23. Array indexes', '24. Arrays with multiple data types', '25. Adding and removing items from arrays', '26. Creating the cards array', '27. Push a new card to the array', '28. Counting in JavaScript', '29. Write your first loop', '30. For loops and arrays', '31. Write your first array-based for loop', '32. For loops, arrays, and DOM', '33. Use a loop to render cards', '34. How can we avoid to hard-code card values?', '35. Returning values in functions', '36. Use a function to set the card values', '37. Generating random numbers with Math.random()', '38. Math.random() * 6', '39. Flooring the number with Math.floor()', '40. Using Math.random() and Math.floor() to create a dice', '41. Completing our dice function', '42. Make getRandomCard() work', '43. Complete getRandomNumber function', '44. Assign values in the startGame function', '45. Our new card feature is broken', '46. The logical AND operator', '47. Write your first logical operator', '48. The logical OR operator', ""49. Only trigger newCard() if you're allowed to"", '50. Object sneak peek', '51. Intro to objects', '52. Create your first object', '53. Use an object to store player data', '54. Methods on object', '55. Congrats & recap'], 'JavaScript challenges - part 2': ['1. Objects and functions', '2. if else', '3. Loops and arrays', '4. push, pop, unshift, shift challenge', '5. Logical operators', '6. Rock papers scissors', '7. EmojiFighter', '8. Sorting fruits', '9. Solo Project - Password Generator'], 'Build a Chrome Extension': [""1. Let's build a Chrome Extension!"", '2. Add button and input tag', '3. Style the button and input tag', '4. Make the input button work with onclick', '5. Refactor to addEventListener', '6. Write your first addEventListener()', '7. Your turn to refactor', '8. Create the myLeads array and inputEl', '9. When to use let and const', '10. Push to the myLeads array', '11. Push the value from the input field', '12. Use a for loop to log out leads', '13. Create the unordered list', '14. Render the leads in the unordered list', '15. How to render <li> elements with innerHTML', '16. Write your first innerHTML', '17. More innerHTML practice', '18. Render the <li> elements with innerHTML', '19. Use createElement() and append() instead of innerHTML', '20. Improving the performance of our app', '21. Create the render function ', '22. Clear the input field', '23. Add the <a> tag', '24. Template strings', '25. Write your first template string', '26. Make the template string even more dynamic', '27. Template strings on multiple lines', '28. Refactor the app to use a template string', '29. Style the list', '30. Preparing the deployment', '31. Deploying the Chrome Extension', '32. What is localStorage?', '33. Your first localStorage', '34. Storing arrays in localStorage', '35. Save the leads to localStorage', '36. Get the leads from localStorage', '37. Truthy and falsy values', '38. Guess the expression - truthy or falsy?', '39. Checking localStorage before rendering', '40. Style the delete button', '41. Make the delete button work', '42. How function parameters can improve our code', '43. Write your first function parameter', '44. Functions with multiple parameters', '45. Numbers as function parameters', '46. Arguments vs Parameters', '47. Arrays as parameters', '48. Refactor renderLeads() to use a parameter', '49. Create the tabBtn', '50. Save the tab url', '51. How to get the current tab?', '52. Use the Chrome API to get the tab', '53. Deploy the final version', '54. Congrats & recap', '55. Share your pet!'], 'JavaScript challenges - part 3': ['1. let & const', '2. Log out items in an array', '3. save to localStorage', '4. addEventListener and object in array', '5. Generate sentence', '6. Render images', '7. Rounding numbers', '8. Convert string to number challenge', '9. Solo Project - Unit converter'], 'Your personality in emojis': ['1. You in Emojis', '2. My Emojis - log the emojis', '3. My Emojis - grabbing the emojiContainer', '4. My Emojis - Rendering the Emojis', '5. My Emojis - adding the input and button', '6. My Emojis - Push and Clear', '7. My Emojis - Render the New Emoji to the Screen', '8. My Emojis - Unshift an Emoji to the Array', '9. My Emojis - Pop and Shift - updated', '10. My Emojis - Share It!', '11. Congrats on completing Module 3'], 'Build an NFT Site': ['1. Essential CSS Concepts Intro', '2. Build an NFT Site Intro', '3. Semantic HTML - Header, Main, Section, Footer', '4. Set up the CSS basics', '5. Aside: Margins - strange behaviour', '6. Header', '7. The first section - image', '8. The first section - text', '9. Aside: Hover and active states', '10. The first section - links', '11. Aside: background full width', '12. Content Container', '13. CSS organisation new', '14. The second section colors', '15. A quick word about Flexbox', '16. The second section imgs', '17. Style the Footer', '18. Grouping Selectors', '19. Warning: Viewing Problems', '20. Aside: Specificity', '21. Aside: Compound selectors', '22. Aside: Compound selectors and specificity', '23. Line-height debug', '24. Aside: Buttons/Links', '25. Style the buttons individually new', '26. Aside: Inline-block', '27. space out the buttons', '28. Aside: A main class and a modifier class', '29. Refactor the buttons', '30. Outro'], 'CSS Fundamentals: Challenges': ['1. CSS Fundamentals: Challenges | Introduction', '2. CSS Fundamentals: Challenge #1 - Setting up the layout', '3. CSS Fundamentals: Solution #1 - Setting up the layout', '4. CSS Fundamentals: Challenge #2 - Google fonts', '5. CSS Fundamentals: Solution #2 - Google fonts', '6. CSS Fundamentals: Challenge #3 - Setting up the typography', '7. CSS Fundamentals: Solution #3 - Setting up the typography', '8. CSS Fundamentals: Challenge #4 - Making things a little more fancy', '9. CSS Fundamentals: Solution #4 - Making things a little more fancy', '10. CSS Fundamentals: Challenge #5 - Breathing Room', '11. CSS Fundamentals: Solution #5 - Breathing Room', '12. CSS Fundamentals: Challenge #6 - Playing with colors', '13. CSS Fundamentals: Solution #6 - Playing with colors', '14. CSS Fundamentals: Challenge #7 - The finer details', '15. CSS Fundamentals: Solution #7 - The finer details', '16. CSS Fundamentals: Challenge #8 - Creating buttons', '17. CSS Fundamentals: Solution #8 - Creating buttons', '18. CSS Fundamentals: Challenge #9 - Fancier headings', '19. CSS Fundamentals: Solution #9 - Fancier headings', '20. CSS Fundamentals: Challenge #10 - Working with what you have', '21. CSS Fundamentals: Solution #10 - Working with what you have', '22. Solo Project - Oldagram', ""23. You've completed Module 4. Well done! 🙌""], 'JavaScript Challenges': ['1. Essential JavaScript Concepts Intro', '2. Build a Modal: HTML', '3. Build a Modal: Buttons CSS', '4. Build a Modal: Modal CSS', '5. Build a Modal: Interactive Buttons', '6. Build a Modal: Overlay CSS', '7. Build a Modal: RGBA Colors', '8. Build a Search Bar: Overview', '9. Build a Search Bar: Events & toLowerCase()', ""10. Build a Search Bar: Capturing the user's search query"", '11. Build a Search Bar: Get all the names from the DOM', '12. Build a Search Bar: Looping over all our names!', '13. Build a Search Bar: Comparing the search query vs. the DOM names', '14. Build a Carousel: Overview', '15. Build a Carousel: Base HTML Structure', '16. Build a Carousel: Styling the fundamentals of the carousel', '17. Build a Carousel: Using translateY to get perfectly aligned buttons', '18. Build a Carousel: Grabbing all carousel items and attaching button event listeners', '19. Build a Carousel: Moving to the next slide', '20. Build a Carousel: Looking at the for of loop', '21. Build a Carousel: Hiding non-active slides', '22. Build a Carousel: Moving to the previous slide', '23. Build a Carousel: Smooth transitions using CSS keyframes', '24. Build a Carousel: Make it your own'], 'Build a dice game': ['1. Challenge: Dice Game - Intro', '2. Challenge: Dice Game - Setting up the game state', '3. Challenge: Dice Game - Setting up the DOM nodes', '4. Challenge: Dice Game - Roll the Dice', '5. Challenge: Dice Game - Switching turns', '6. Challenge: Dice Game - Displaying the dice number', '7. Challenge: Dice Game - Keeping track of the score', '8. Challenge: Dice Game - Declare a winner', '9. Challenge: Dice Game - Make it DRYer', '10. Challenge: Dice Game - Reset game', '11. Challenge: Dice Game - Make it your own', '12. Congratulations on completing module 5! 😃'], 'Starting to think responsively': ['1. Starting to think responsively', '2. CSS Units', '3. CSS Units - Percentage', '4. Controlling the width of images', '5. min-width and max-width', '6. CSS Units - The em unit', '7. The problem with ems', '8. CSS Units - rems', '9. Picking which unit to use', '10. ems and rems - an example', '11. Flexbox refresher and setting up some HTML', '12. Basic styles and setting up the columns', '13. Adding the background color ', '14. Setting the column widths', '15. Spacing out the columns', '16. Controlling the vertical position of flex items', '17. Media Query basics', '18. Making our layout responsive with flex-direction', '19. flex-direction explained', '20. Creating a navigation', '21. Using flexbox to start styling our navigation', '22. Making our navigation look good', '23. Adding the underline', '24. A more complicated navigation', '25. Making the navigation responsive', '26. Taking a look at the rest of the project', '27. Setting up the structure', '28. Featured article structure', '29. The home page - HTML for the recent articles', '30. home page - html for the aside', '31. Starting the CSS for our page', '32. Starting the layout - looking at the big picture', '33. Starting to think mobile first', '34. Styling the featured article', '35. Changing the visual order with flexbox', ""36. Playing with the title's position, and the downsides of negative margins"", '37. Styling recent articles for large screens', '38. Changing image sizes with object-fit', '39. Setting up the widgets and talking breakpoints', '40. Using a new pseudo-class to wrap-up the homepage', '41. Creating the recent posts page', '42. Setting up the About Me page', '43. Fixing up some loose ends', '44. Important Note: The viewport meta tag', '45. Module wrap up'], 'Responsive design challenges': ['1. Responsive Design Challenges - Introduction', '2. Responsive Design: Challenge #1 - The first step toward a responsive design', '3. Responsive Design: Solution #1 - The first step toward a responsive design', '4. Responsive Design: Challenge #2 - Relative units', '5. Responsive Design: Solution #2 - Relative Units', '6. Responsive Design: Challenge #3 - Adapting the text and images', '7. Responsive Design: Solution #3 - Adapting the text and images', '8. Responsive Design: Challenge #4 - Some breathing room', '9. Responsive Design: Solution #4 - Some breathing room', '10. Responsive Design: Challenge #5 - Modifying the layout at large screens', '11. Responsive Design: Solution #5 - Modifying the layout at large screens', '12. Responsive Design: Challenge #6 - Color manipulation', '13. Responsive Design: Solution #6 - Color manipulation', '14. Responsive Design: Challenge #7 - More fun with colors', '15. Responsive Design: Solution #7 - More fun with colors', '16. Responsive Design: Challenge #8 - Vertical alignment', '17. Responsive Design: Solution #8 - Vertical alignment', '18. Responsive Design: Challenge #9 - Fixing a broken layout', '19. Responsive Design: Solution #9 - Fixing a broken layout', '20. Responsive Design: Challenge #10 - Horizontal alignment', '21. Responsive Design: Solution #10 - Horizontal alignment', '22. Responsive Design: Challenge #11 - Horizontal alignment', '23. Responsive Design: Solution #11 - Horizontal alignment'], 'Stepping up our style': [""1. It's time to step up our style"", '2. A look at line-height', '3. text-transform: uppercase', '4. Making things easier to read with letter-spacing', '5. A nice color trick with rgba()', '6. background-images', '7. Background images and the file path (very important note)', '8. Controlling our background images', '9. BBQ Splash Page - Project Introduction', '10. Writing the HTML for the BBQ splash page', '11. Starting to style it up - BBQ Splash Page', '12. Adding the background image - BBQ Splash Page', '13. Changing the order - BBQ Splash Page', '14. Styling the main content area - BBQ Splash page', '15. Adding the media query - BBQ Splash Page', '16. Setting up the typography for large screens - BBQ Splash Page', '17. Starting to set things up for large screens - BBQ Splash Page', '18. Viewport units', '19. Adding viewport units to the BBQ Splash Page', '20. Enter box-sizing: border-box', '21. Using flexbox to vertically center the main content - BBQ Splash Page', '22. Fixing the intro section on both small and large screens - BBQ Splash Page', '23. Dealing with very large screens solution #1', '24. Dealing with very big screens solution #2', '25. The very basics of forms', '26. Form basics - form attributes', '27. The basics of styling form', '28. Adding the form - BBQ Splash Page', '29. Starting to style up the form - BBQ Splash Page', '30. Making the inputs look good - BBQ Splash Page', '31. CSS Gradients', '32. Styling the button - BBQ Splash Page', '33. Basic transitions', '34. Intro to transforms (and a quick word on performance)', '35. We can transition more than :hover', '36. Border gradients', '37. Blending images, colors, and gradients with background-blend-mode', '38. Wrap up', ""39. You've completed module 6! 🥳""], 'Build a role-playing game part 1 - The setup': ['1. Next-level JavaScript Intro', '2. Render the characters', '3. The renderCharacter() function', '4. Modify renderCharacter()', '5. Aside: Object destructuring', '6. Aside: Object destructuring challenge', '7. Object Destructuring in renderCharacter()', '8. Render multiple dice', '9. The problem with for loops', '10. Aside: .map()', '11. Aside: .map() challenge', '12. Aside: .join() challenge', '13. Swap out for loop for map', '14. Generate random value for dice', '15. Aside: return a function', '16. Render dice with random numbers', '17. Aside: new Array constructor ', '18. Aside: .fill()', '19. Aside: chaining .fill() and .map() onto a new Array', '20. Use the Array constructor', '21. Part 1 Outro'], 'Build a role-playing game part 2 - Constructor functions': ['1. Part 2 Intro', '2. Aside: Constructor functions', '3. Aside: Constructor functions challenge', '4. Aside: Methods on constructor functions', '5. Aside: Methods on constructor functions  challenge', '6. Use a constructor function 1', '7. Use a constructor function 2', '8. Aside: Object.assign', '9. Simplify constructor function 1', '10. Simplify constructor function 2', '11. Problem in the constructor function!', '12. Fix the broken rendering', '13. Amalgamate the objects', '14. Too much code for one file!', '15. Export getDiceRollArray()', '16. Export Character constructor', '17. Running your code locally', '18. Good housekeeping', '19. Part 2: Outro'], 'Build a role-playing game part 3 - The gameplay': ['1. Part 3: Intro', '2. Wire up the attack button', '3. Launch the first attack!', '4. Dice placeholders', '5. Render placeholder dice', ""6. Well, that's embarrassing..."", '7. Fix the dice render problem 1', '8. Fix the dice render problem 2', '9. Inflicting damage', '10. Inflicting damage 2', '11. Aside: array.reduce()', '12. Aside .reduce() challenge', '13. Use .reduce() to calculate the damage', '14. Stop health going negative', '15. Is the character dead?', '16. Calling endGame()', '17. Aside: The Ternary Operator', '18. Aside: Ternary Operator challenge', '19. endGame()', '20. endGame() 2', '21. Aside: Arrow functions', '22. Aside: Arrow functions challenge', '23. Aside: inline arrow function challenge', '24. Using arrow functions', '25. Calculate percentage health remaining', '26. The health bar', '27. Displaying the health bar', '28. Move getPercentage out of the constructor file', '29. Adding more monsters 1', '30. Add new monster 2', '31. Back to one monster', '32. When one monster dies, another appears', '33. Aside: setTimeout', '34. aside setTimeout challenge', '35. Improve the UX - pause time', '36. Improve the UX - disable the button', '37. Tidy Up', '38. Part 3 Outro'], 'Build a role-playing game part 4 - Classes': ['1. Part 4 Intro', '2. Aside: Classes 1', '3. Aside: Classes 2', '4. Aside: Classes challenge 1', '5. Aside: Classes challenge 2', '6. Convert the constructor function to a class', '7. Solo Project - Tindog', '8. Congratulations on completing Module 7! 🎊'], 'Code reviews': ['1. Why code reviews matter', '2. The most common type of code review: GitHub PRs', '3. What to look for in a code review', '4. Your first textual code review', '5. Scrim-based code reviews', '6. Solo Project code review – password generator', '7. Your first scrim-based code review', '8. Share your scrim-based code review solution', '9. Find a real Solo Project to review'], 'Branching and Pull Requests with GitHub Desktop': ['1. Introduction to Branching and Pull Requests', '2. Make an Issue in GitHub', '3. Creating a Branch', '4. Creating a Pull Request', '5. Resolving Merge Conflicts', '6. Pulling', '7. Congratulations on completing Module 8! ✨'], 'Intro to APIs & BoredBot': ['1. APIs Module Intro', '2. What is an API?', '3. Clients & Servers', '4. Requests & Responses', '5. BoredBot Intro', '6. JSON Review', '7. First fetch', '8. .then() and Asynchronous JavaScript', '9. Dog API Fetch and DOM Practice', '10. Fetch idea from Bored API', '11. Aside - apis.scrimba.com?', '12. BoredBot - HTML', '13. BoredBot - CSS', '14. BoredBot - JavaScript', '15. BoredBot - Extra Styling', '16. Section Recap'], 'URLs, REST, & BlogSpace': ['1. Section Intro', '2. HTTP Requests', '3. Requests - URLs and Endpoints', '4. Requests - Methods', '5. BlogSpace - GET first 5 blog posts', '6. BlogSpace - Display blogs on page', '7. BlogSpace - Add styling', '8. BlogSpace - New post form', '9. BlogSpace - Add style to form', '10. BlogSpace - Form submit event listener', '11. Requests - Body', '12. Requests - Headers', '13. BlogSpace - Send new post to server', '14. BlogSpace - Add new post to list of posts', '15. BlogSpace - Posts Refactor', '16. BlogSpace - Reset form', '17. REST', '18. REST API Design', '19. Nested Resources', '20. URL Parameters - JSON Placeholder API', '21. Query Strings', '22. Query String Practice - OpenWeatherMap API', '23. Solo Project - Color Scheme Generator', '24. Section Recap'], 'Async JavaScript & War': ['1. Async JS Intro & War Project', '2. Callbacks Setup Challenge', '3. Callback functions intro', '4. Separate event listener callback', '5. Callbacks - revisiting setTimeout', '6. Callbacks - revisiting array.filter', '7. Callbacks - make own filterArray function', '8. Callbacks - put our custom filterArray function to use', '9. Thought experiment: what if `fetch` used callbacks?', '10. Promises', '11. Context: method chaining', '12. Promises - .then() chaining', '13. Promises - .then()', '14. Promises - passing basic values in the chain', '15. War - save deckId for later use', '16. War - draw 2 cards from our deck', '17. War - Display our card images', '18. War - Styling part 1', '19. War - Styling part 2', '20. War - Refactor card image placement', '21. War - Determine the winning card part 1', '22. War - Determine winning card part 2', '23. War - display remaining cards when drawing', '24. War - Display remaining cards on new deck', '25. War - Disable the draw button when we get to 0 cards remaining', '26. War - Keep score', '27. War - Display the final winner', ""28. Sneak peak at ES8's Async/Await"", '29. Solo Project - Movie Watchlist', '30. Section Recap'], 'Promise Rejection & Capstone': ['1. Section Intro', '2. Dashboard wireframe', '3. Get photo from Unsplash', '4. Add Author Info', '5. Choosing a layout method', '6. Set up flexbox', '7. Promises review', '8. Promise rejection', '9. Promise rejection practice', '10. Crypto - Add cryptocurrency data', '11. Crypto - Get Dogecoin data', '12. Check for error responses', '13. Crypto - Display name and icon', '14. Crypto - get prices', '15. Time - Add current time with JavaScript', '16. Time - Display time on page', '17. Weather - start', '18. Thought experiment - getCurrentLocation as a promise-based API?', ""19. Weather - Get user's current weather"", '20. Weather - Add icon', '21. Weather - Add temp and city', '22. Weather - CSS', '23. Chrome extension time!', '24. Module Outro', ""25. You've completed Module 9! 🥳""], 'Taking flexbox to the next level': ['1. Flexbox + Grid Module Intro', '2. Taking flexbox to the next level', '3. flex-direction, flex-wrap, and flex-flow', '4. justify-content and align-items and their relationship to flex-direction', '5. Exploring align-content', '6. flex-grow and flex-shrink explained', '7. flex-basis', '8. The flex shorthand property', '9. Aligning individual elements with align-self', '10. Margin auto and flexbox', '11. Building a card component with flexbox - Introduction', '12. Building a card component with flexbox - The markup', '13. Building a card component with flexbox - Typography', '14. Building a card component with flexbox - Mobile layout', '15. Building a card component with flexbox - Large screens part one', '16. Building a card component with flexbox - Large screens part two', '17. Centering something on the screen with flexbox', '18. Module wrap-up'], 'Flexbox & Fetch': ['1. 🚨IMPORTANT: Please watch before continuing', '2. Color Picker', '3. Challenge: Color Picker ', '4. Photo Gallery I', '5. Photo Gallery II', '6. Challenge: Photo Gallery', '7. Online Users', '8. Online Users II', '9. Challenge: Online Users', '10. User Profile', '11. Challenge: User Profile', '12. Wrap Up'], 'CSS Grid: The ultimate layout tool': ['1. Introduction to CSS Grid', '2. Setting up a basic grid', '3. Placing items on the grid', '4. grid-row and grid-column shorthands', '5. Spanning columns', '6. Some similarities to flexbox', '7. Using grid for our card component', '8. The grid-gap property', '9. Adding the gap to our card', '10. The implicit and explicit grid', '11. Exploring grid areas', '12. grid-areas and media queries', '13. minmax()', '14. the fr unit', '15. minmax() and the fr unit', '16. Putting grid to use - part 1', '17. Putting grid to use - part 2', '18. repeat()', '19. auto-fit and auto-fill'], 'Grid & Fetch': ['1. Jeopardy Explanation', '2. Jeopardy', '3. Challenge: Jeopardy', '4. Pokedex', '5. Challenge: Pokedex', '6. Library', '7. Challenge: Library', '8. TV Guide', '9. Challenge: TV Guide', '10. Challenge: An API for APIs', ""11. You've completed Module 10! 🥳""], 'Intro to UI design': ['1. Welcome to UI design!', '2. Course Introduction', '3. White Space', '4. Alignment', '5. Design Challenge: 1', '6. Contrast', '7. Scale', '8. Design Challenge: 2', '9. Typography', '10. Color', '11. Design Challenge: 3', '12. Visual Hierarchy', '13. Design Challenge: 4', '14. The Final Challenge', '15. Closing Thoughts'], 'Build A Simple Layout': ['1. Building a simple layout - intro', '2. Keeping it Ultra Simple', '3. Making our Layout Dark', '4. Challenge 1', '5. Multi-Columns', '6. Working with Photographs', '7. Final Chapter Lesson'], 'Full Project Refactoring': ['1. Project Refactoring: Introduction & Defining the HTML', '2. Fixing the Color & Contrast', '3. Fixing the Type & Visual Hierarchy', '4. Fixing White Space', '5. Initial Media Queries', '6. Tablet Media Queries', '7. Desktop Media Query'], 'Build and deploy your portfolio': ['1. Introduction', '2. Setting things up - HTML', '3. The header area - HTML', '4. Intro section', '5. About me, Work and Footer - HTML', '6. Setting up the custom properties and general styles', '7. Styling the titles and subtitles', '8. Setting up the intro section', '9. Styling the services section', '10. The About me section', '11. The portfolio', '12. Adding the social icons with Font Awesome', '13. Styling the footer', '14. Setting up the navigation styles', '15. Creating the hamburger', '16. Adding the JS', '17. Creating the portfolio item page', '18. Customizing your page', '19. DigitalOcean Droplets - What they are and how to set one up', '20. DigitalOcean Droplets - Uploading files via FTP', '21. Congratulations on completing Module 11! ✨'], 'Build a React info site': ['1. Welcome to an Introduction to React!', ""2. What we'll learn"", '3. First React', '4. First React Practice', '5. Local setup (the quick way)', ""6. Why React? It's Composable!"", ""7. Why React? It's declarative"", '8. JSX', '9. Goodbye, CDNs!', '10. UPDATE: New React 18 createRoot API', '11. Thought experiment: use .append() instead of ReactDOM.render()?', '12. Project part 1 - markup', '13. Pop quiz!', '14. Custom Components', '15. Custom Components part 2', '16. Custom Components Quiz', '17. Parent/Child Components', '18. Styling with Classes', '19. Organize components', '20. Run React locally with Vite', '21. Quick mental outline of project', '22. Project setup', '23. Quick Figma Walkthrough', '24. Navbar & Styling', '25. Main Section', '26. Color the bullets', '27. Add background logo', '28. React Section 1 Solo Project', '29. React Section 1 Recap'], 'Build an AirBnb Experiences clone': ['1. Section intro & Figma file', '2. Project setup: Navbar', '3. Project setup: Hero', '4. Project: Card Component', '5. Problem - not reusable', '6. Props Part 1: Understanding the Concept', '7. Props Part 2: Reusable Components', '8. Aside: JS inside JSX', '9. Props part 3: Create a contact component', '10. Props part 4: receiving props in a component', '11. Prop quiz! (Get it?? 😆)', '12. Destructuring props', '13. Props practice', '14. Passing in non-string props', '15. Project: pass props to card component', '16. Review - array .map()', '17. React renders arrays', '18. Mapping components', '19. Map quiz!', '20. Loading images from .map()', '21. Project: Map experiences data into components', '22. Project: key prop', '23. Project: Sold Out Badge', '24. Project: Pass object as props', '25. Project: Spread object as props', '26. React Section 2 Solo Project', '27. React Section 2 Recap'], 'Build a meme generator': ['1. Section Intro & Figma file', '2. Meme Generator: Header', '3. Meme Generator: Form', '4. Project analysis', '5. Event Listeners', '6. Project: Get random meme', '7. Our current conundrum', '8. Props vs. State: Props', '9. Props vs. State: State', '10. Props vs. State Quiz!', '11. useState', '12. useState array destructuring', '13. Changing state', '14. useState - Counter practice', '15. useState - Changing state with a callback function', '16. Changing state quiz!', '17. Project: Add images to the meme generator', '18. Challenge: ternary practice', '19. Challenge: flipping state back and forth', '20. Complex state: arrays', '21. Complex state: objects', '22. Complex state: updating state objects', '23. Project: Refactor state', '24. Passing state as props', '25. Setting state from child components', '26. Passing data around', '27. Boxes challenge part 1', '28. Dynamic styles', '29. Boxes challenge part 2', '30. Boxes challenge part 3.1 - local state', '31. Boxes challenge part 3.2 - unified state', '32. Boxes challenge part 4', '33. Boxes challenge part 5', '34. Conditional rendering: &&', '35. Conditional rendering: && practice', '36. Conditional rendering: ternary', '37. Conditional rendering practice', '38. Conditional rendering quiz!', '39. React forms intro', '40. Watch for input changes in React', '41. Form inputs practice', '42. Forms state object', '43. Form state object practice', '44. Controlled inputs', '45. Forms in React: Textarea', '46. Forms in React: Checkbox', '47. Forms in React: Radio buttons', '48. Forms in React: Select & Option', '49. Forms in React: Submitting the form', '50. Forms quiz!', '51. Sign up form practice', '52. Project: Add text to image', '53. Making API calls', '54. Intro to useEffect', '55. useEffect() syntax and default behavior', '56. useEffect dependencies array', '57. useEffect quiz!', '58. useEffect for fetching data', '59. useEffect: when to use dependencies', '60. Project: Get Memes from API', '61. State and Effect practices', '62. useEffect cleanup function', '63. Using an async function inside useEffect (Clone)', '64. React Section 3 Recap'], 'Build a notes app and Tenzies games': ['1. Section 4 Intro', '2. Warm-up: Add Dark/Light modes to ReactFacts site', '3. Notes App: Intro', '4. Notes App: Features to add', '5. Notes App: Sync notes with localStorage', '6. Lazy State Initialization', '7. Notes App: Note summary title', '8. Notes App: Bump recent note to the top', '9. Notes App: Delete note', '10. Tenzies Project Intro', '11. Tenzies: Setup', '12. Tenzies: Die components', '13. Tenzies: Generate array of 10 random numbers', '14. Tenzies: Map array to Die components', '15. Tenzies: Roll dice button', '16. Tenzies: Change dice to objects', '17. Tenzies: Styling held dice', '18. Tenzies: Hold dice part 1', '19. Tenzies: Hold dice part 2', '20. Tenzies: Hold dice part 3', '21. Tenzies: End game part 1', '22. Tenzies: End game part 2', '23. Tenzies: End game part 3', '24. Tenzies: New Game', '25. Tenzies: Extra Credit Ideas', '26. React Section 4 Solo Project', '27. Check out the class components crash course!', '28. Congratulations on completing Module 13! 🤩'], 'Learn class components in React': ['1. Class Components Section Intro', '2. ES6 classes review', '3. Intro to class components', '4. Class components practice', '5. State in class components', '6. Setting state in class components', '7. Challenge: convert to a class component with state', '8. Constructor method in class components', '9. Challenge: constructor method', '10. Updating complex state with this.setState()', '11. Lifecycle Methods Intro', '12. Lifecycle methods: componentDidMount() 👶', '13. Lifecycle methods: componentDidUpdate() part 1 ✏️', '14. Lifecycle methods: componentDidUpdate() part 2 ✏️', '15. Lifecycle methods: componentWillUnmount() \U0001faa6', '16. Other Lifecycle Methods'], 'Reusability': ['1. Code Reuse in React', '2. React Children', '3. Challenge: React Children', '4. Higher Order Components (HOCs) Part 1', '5. Higher Order Components (HOCs) Part 2', '6. Challenge: Higher Order Components (HOCs) ', '7. Higher Order Components (HOCs) Part 3', '8. Render Props Part 1', '9. Render Props Part 2', '10. Render Props Part 3', '11. IMPORTANT: Please watch before continuing the course', '12. Challenge: Render Props', ""13. React's Tree Rendering 🌳""], 'Performance': ['1. What is ""Shallow Comparison""?', '2. shouldComponentUpdate()', '3. React.PureComponent', '4. React.memo()', '5. Feedback - Performance'], 'React Context': ['1. Context Intro', '2. Context Provider', '3. contextType', '4. Challenge: Context Practice 1', '5. Context.Consumer', '6. Challenge: Context Practice 2', '7. Move Context Provider to its own component', '8. Challenge: Changing Context', '9. Challenge: Context Practice 3', '10. Context Conclusion'], 'React Hooks': ['1. Speed Typing Game Intro', '2. Speed Typing Game Part 1', '3. Speed Typing Game Part 2', '4. Speed Typing Game Part 3', '5. Speed Typing Game Part 4', '6. Speed Typing Game Part 5', '7. Speed Typing Game Part 6', '8. useRef', '9. Speed Typing Game Part 7', '10. useContext()', '11. Hooks Practice - refactor themeContext', '12. Custom Hooks', '13. Custom Hooks practice - refactor toggler', '14. Speed Typing Game Part 8'], 'React Router': ['1. Intro to React Router', '2. React Router - BrowserRouter', '3. React Router - Link', '4. React Router - Switch & Route', '5. Challenge: React Router', '6. React Router - props passed to routed components', '7. NOTE: watch this before proceeding', '8. React Router Nested Routes', '9. React Router useParams', '10. React Router useRouteMatch', '11. React Router useHistory', '12. React Router useLocation', '13. React Router - Redirect', '14. Challenge: React Router Practice Part 1', '15. Challenge: React Router Practice Part 2'], 'Capstone Project': [""1. What we're building"", '2. Update: Please watch before proceeding', '3. React Router Setup', '4. Context Setup', '5. Context State', '6. Fetch Photos', '7. Map Photos', '8. Track Hover State', '9. Display Icons on Hover', '10. Toggle isFavorite', '11. Display Favorites', '12. Image propTypes', '13. Add Image to Cart', '14. Indicate When Image is Already in Cart', '15. Remove From Cart', '16. Update Header Cart Icon', '17. Cart Page Setup', '18. Remove Items from Cart Page', '19. Calculate Total Cost', '20. Place Order', '21. Minor UX Improvements', '22. Custom Hover Hook', '23. Feedback - Capstone Project', '24. Congratulations on completing Module 14! ✨'], 'Getting hired': ['1. Getting hired - Module Intro', '2. Getting Hired', '3. Getting Hired - Problem Solving'], 'Using LinkedIn to get a job': ['1. Course Introduction (new)', '2. Optimizing your headline', '3. Crafting a great summary', '4. Adding a professional headshot', '5. Adding an awesome cover image', '6. Increasing your visibility', '7. Adding past work experience', '8. Highlighting your accomplishments', '9. Optimizing your keywords', '10. Getting connected', '11. Getting recommendations (new)', '12. Outro'], 'Frontend job interview tips': ['1. Course Introduction', '2. Falsy Values', '3. const vs let vs var', '4. Double vs triple equal', '5. map() vs filter() vs reduce()', '6. undefined vs null', '7. Data Types', '8. Spread & Rest Operators', '9. Destructuring Objects and Arrays', '10. Git Fundamentals', '11. Agile & Scrum', '12. CSS Selectors', '13. Responsive Design', '14. Number Issues', '15. Promises', '16. Pass by value vs pass by reference', '17. Five questions to be prepared for', '18. Five preparation tips', '19. Got any questions for me?', '20. GitHub tips', '21. Resume tips', '22. Job search strategy'], 'JavaScript interview questions': ['1. Course intro', '2. Introduction: Pangram check function', '3. Solution: Pangram check function', '4. Introduction: API array methods', '5. Solution: API array methods', '6. Introduction: Rain language translator', '7. Solution: Rain language translator', '8. Introduction: Write isogram check function', '9. Solution: Write isogram check function', '10. Introduction: Write leap year check function', '11. Solution: Write leap year check function', '12. Introduction: Write run length encoding/decoding function', '13. Solution: Write run length encoding/decoding function', '14. Introduction: Remove duplicates from array with reduce() ', '15. Solution: Remove duplicates from array with reduce()', '16. Introduction: Implement array map with reduce()', '17. Solution: Implement array map with reduce()', '18. Introduction: Flatten array with reduce()', '19. Solution: Flatten array with reduce()', '20. Introduction: Transpose matrix', '21. Solution: Transpose matrix', '22. Wrap up'], 'React interview questions': ['1. React Interview Questions Course Introduction', '2. The Virtual DOM', '3. React Limitations', '4. JSX', '5. Props', '6. State and Lifecycle', '7. Effects', '8. Refs', '9. Context', '10. Miscellaneous (but important!) Questions', '11. React Interview Questions Course Conclusion', '12. Congratulations on completing The Frontend Developer Career Path! ✨']}","['HTML', 'CSS', 'JavaScript', 'React', 'APIs', 'Web architecture', 'Responsive design', 'Web design', 'UI Design', 'Git', 'The job search', 'Getting hired', 'Coding interviews']","['Google clone', 'Passenger counter app', 'Blackjack game', 'Dice game', 'Bored Bot', 'A personal portfolio', 'React fact page', 'AirBnB', 'Meme generator', 'Tenzies game', 'Photo store']",[],,"['This career path will turn you into a hireable frontend developer as fast as possible. By the end of it, you will have learned enough HTML, CSS, JavaScript, and React to get your first job as a frontend web developer. ', 'It will also prepare you with strategies to get through the interview process, so that you increase the chance of landing your dream job.', 'The teachers of this path are some of the most popular online instructors these days, like Kevin Powell, Gary Simon, Cassidy Williams, and Dylan Israel. They’re all people who have gone up the hard road of becoming professional developers, so they know exactly what it takes.', 'Throughout the path, you’ll build more than a dozen projects, and solve more than 100 interactive coding challenges. In total, it clocks more than 70 hours. It’s fully self-paced, and you can choose whether you’d like to do it part-time or full-time.']"
41,Build a space travel website,Kevin Powell,Course level: Intermediate,Bring a Frontend Mentor design to life and create your own design system while building a multi-page space travel website with Kevin Powell as your guide.,"{'The design system': ['1. Introduction', '2. Design System Overview', '3. Creating a general reset', '4. General Utility Classes', '5. Frontend Career Path', '6. Using Our General Utility Classes', '7. Color Utility Classes part 1', '8. Color challenge', '9. Color Utility Classes part 2', '10. Typography part 1', '11. Typography part 2', '12. Numbered titles', '13. Spacing', '14. The Explore Button part 1', '15. The Explore Button part 2 - adding the animation', '16. Underline Indicators Part One', '17. Underline Indicators Part Two', '18. Underline Indicators Part Three', '19. Dot Indicators', '20. Number Indicators', '21. Getting started on creating the site'], 'The homepage': ['1. Getting everything in place', '2. Setting up a grid container ', '3. Responsiveness', '4. Responsive Typography', '5. Fixing the homepage title', '6. A layout challenge', '7. Final touches on the layout', '8. Adding the background images'], 'Navigation': ['1. Setting up the mobile navigation', '2. Fixing the mobile nav layout', '3. The navigation background', '4. Dealing with browser support', '5. The open/close button', '6. Adding the functionality', '7. Adding animations and changing the button icon', '8. Medium screen sizes part 1', '9. Medium screen sizes part 2', '10. Large screens part 1', '11. Large screens part 2', '12. Accessibility tweaks', '13. Adding a skip to content link'], 'The destination page': ['1. The destination page | Introduction', '2. Getting the destination page started', '3. The mobile layout', '4. Medium screen layout', '5. Large screen layout', '6. Fixing the alignment issue', '7. The content', '8. The layout', '9. Little touches and improvements', '10. The picture element'], 'The tabs': ['1. Tabs | Setting the stage', '2. Keyboard navigation part 1', '3. Keyboard navigation part 2', '4. Keyboard navigation part 3', '5. Activating the tab', '6. Hiding the previous tab', '7. Changing the image', '8. Highlighting the active tab', '9. Refactoring ', '10. The crew tabs part 1', '11. The crew tabs part 2', '12. Cleaning up some loose ends', '13. The technology page (and beyond?)']}","['Creating design systems', 'CSS resets', 'Utility classes', 'Using color', 'Responsive typography', 'Adding spacing', 'Effective buttons', 'Underline indicators', 'Dot indicators', 'Number indicators', 'Grid containers', 'Responsiveness', 'Adding background images', 'Navigation', 'Open/close buttons', 'Accessibility tweaks', 'Skip to content', 'Alignment', 'The picture element', 'Keyboard navigation', 'Tabs', 'Refactoring']",['Space travel website'],"['Before taking this course, you should have a basic understanding of HTML, CSS, and JavaScript. Here’s our suggested resource to get you up to speed.']","Hi, I'm Kevin. I love to teach people how to make the web and how to make it look good while they're at it. Over 300.000 people follow my tutorials on YouTube.

I learned to make websites on my own. I know how fun and rewarding it is, but I also know that it can be incredibly frustrating. I'm here to help make your journey into web development as easy and as fun as possible. ","['Build a space travel website', ' is the perfect course for frontend developers who want to practice bringing high-quality Figma designs to life in the browser.  ', ' ', ' It’s the ultimate collab: ', 'Frontend Mentor', ' on design, ', 'Scrimba', ' on toolkit, ', 'Kevin Powell', ' as a guide and ', 'you as developer', '. ', ' ', ' During the course, you’ll test your ', 'HTML, CSS and JavaScript', ' skills by building out a ', 'responsive', ', multi-page site featuring a homepage, buttons, a navigation bar, tabs, keyboard navigation and underline, dot and number indicators.  ', ' ', ' You’ll also learn how to create an effective ', 'design system', ' to ensure that your site is sharp and professional, and ', 'your coding is as efficient', ' as possible. ', ' ', ' You’ll get as much ', 'independent practice', ' as possible in this course, using detailed designs in Figma to craft a site which looks amazing on a variety of screen sizes and browsers. ', ' ', ' Thanks to Scrimba interactive technology, you’ll build the muscle memory you need to become a truly efficient developer. ', ' ', ' After completing this course, you’ll have a deep understanding of CSS and responsive design and the knowledge to build an interactive site which users will adore.  ', '  ', 'Support during the course:', ""   While we can't offer one-to-one support (yet!), our "", 'friendly Discord community', ' is waiting to welcome your questions, share ideas with you, or just chat on a coffee break.']"
